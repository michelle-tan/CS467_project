{"version":3,"sources":["webpack:///./node_modules/q/q.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/ReviewForm.vue?8702","webpack:///src/components/ReviewForm.vue","webpack:///./src/components/ReviewForm.vue?d937","webpack:///./src/components/ReviewForm.vue"],"names":["process","definition","bootstrap","module","exports","hasStacks","Error","e","stack","qFileName","qStartingLine","captureLine","noop","nextTick","head","task","next","tail","flushing","requestTick","isNodeJS","laterQueue","flush","domain","enter","runSingle","length","pop","exit","setTimeout","toString","setImmediate","window","bind","MessageChannel","channel","port1","onmessage","requestPortTick","port2","postMessage","runAfter","push","call","Function","uncurryThis","f","apply","arguments","QReturnValue","array_slice","Array","prototype","slice","array_reduce","reduce","callback","basis","index","this","TypeError","array_indexOf","indexOf","value","i","array_map","map","thisp","self","collect","undefined","object_create","Object","create","Type","object_defineProperty","defineProperty","obj","prop","descriptor","object_hasOwnProperty","hasOwnProperty","object_keys","keys","object","key","object_toString","isObject","isStopIteration","exception","ReturnValue","STACK_JUMP_SEPARATOR","makeStackTraceLong","error","promise","stacks","p","source","__minimumStackCounter__","stackCounter","configurable","unshift","concatedStacks","join","filterStackString","stackString","lines","split","desiredLines","line","isInternalFrame","isNodeFrame","stackLine","getFileNameAndLineNumber","attempt1","exec","Number","attempt2","attempt3","fileNameAndLineNumber","fileName","lineNumber","qEndingLine","firstLine","deprecate","name","alternative","console","warn","Q","Promise","isPromiseAlike","coerce","fulfill","resolve","longStackSupport","longStackCounter","defer","resolvedPromise","messages","progressListeners","deferred","promiseDispatch","op","operands","args","valueOf","nearerValue","nearer","isPromise","inspect","state","substring","become","newPromise","message","reject","reason","notify","progress","progressListener","resolver","race","answerPs","len","then","fallback","result","inspected","when","fulfilled","rejected","progressed","isPending","isFulfilled","isRejected","NODE_ENV","BASE_URL","Q_DEBUG","makeNodeResolver","all","passByCopy","x","y","that","spread","makePromise","done","_fulfilled","_rejected","newException","_progressed","newValue","threw","onerror","tap","fcall","thenResolve","thenReject","unhandledReasons","unhandledRejections","reportedUnhandledRejections","trackUnhandledRejections","resetUnhandledRejections","trackRejection","emit","untrackRejection","at","atReport","splice","rejection","get","set","rhs","delete","post","master","isDef","dispatch","async","makeGenerator","continuer","verb","arg","StopIteration","generator","errback","spawn","_return","promised","promises","pendingCount","snapshot","any","prev","current","onFulfilled","onRejected","err","onProgress","allResolved","allSettled","nodeify","nodeback","getUnhandledReasons","stopUnhandledRejectionTracking","array","del","mapply","send","mcall","invoke","fapply","fbind","concat","regardless","fail","fin","onUnhandledError","timeout","ms","timeoutId","code","clearTimeout","delay","nfapply","nodeArgs","nfcall","nfbind","denodeify","baseArgs","nbind","bound","nmapply","npost","nsend","nmcall","ninvoke","noConflict","global","scope","Timeout","id","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","__webpack_require__","clearImmediate","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","installNextTickImplementation","canUsePostMessage","installPostMessageImplementation","installMessageChannelImplementation","createElement","installReadyStateChangeImplementation","installSetTimeoutImplementation","handle","run","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","Math","random","onGlobalMessage","event","data","addEventListener","attachEvent","html","documentElement","script","onreadystatechange","removeChild","appendChild","dP","FProto","nameRE","NAME","match","render","_vm","_h","$createElement","_c","_self","on","submit","$event","preventDefault","handleSubmit","formData","attrs","label","placeholder","titlePlaceholder","required","model","$$v","$set","expression","_v","_l","n","icon","getIconType","mouseover","hoverOverStarIndex","mouseleave","click","rating","descriptionPlaceholder","rows","multiple","fileInputMessage","drop-placeholder","accept","change","addFiles","slot","_s","staticStyle","margin-top","images","variant","_f","handleDeleteFile","_e","type","staticRenderFns","ReviewFormvue_type_script_lang_js_","title","description","props","created","objectSpread","toConsumableArray","beforeUpdate","filters","getName","image","computed","numWholeStars","numEmptyStars","numFiles","methods","target","files","components_ReviewFormvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"sGAAA,SAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;CA4BA,SAAAC,GACA,aAQA,oBAAAC,UACAA,UAAA,UAAAD,GAIAE,EAAAC,QAAAH,KAdA,CAkDC,WACD,aAEA,IAAAI,GAAA,EACA,IACA,UAAAC,MACC,MAAAC,IACDF,IAAAE,GAAAC,MAKA,IACAC,EADAC,EAAAC,IAMAC,EAAA,aAIAC,EAAA,WAEA,IAAAC,EAAA,CAAgBC,UAAA,EAAAC,KAAA,MAChBC,EAAAH,EACAI,GAAA,EACAC,OAAA,EACAC,GAAA,EAEAC,EAAA,GAEA,SAAAC,IAEA,IAAAP,EAAAQ,EAEA,MAAAT,EAAAE,KACAF,IAAAE,KACAD,EAAAD,EAAAC,KACAD,EAAAC,UAAA,EACAQ,EAAAT,EAAAS,OAEAA,IACAT,EAAAS,YAAA,EACAA,EAAAC,SAEAC,EAAAV,EAAAQ,GAGA,MAAAF,EAAAK,OACAX,EAAAM,EAAAM,MACAF,EAAAV,GAEAG,GAAA,EAGA,SAAAO,EAAAV,EAAAQ,GACA,IACAR,IAES,MAAAR,IACT,GAAAa,EAeA,MARAG,GACAA,EAAAK,OAEAC,WAAAP,EAAA,GACAC,GACAA,EAAAC,QAGAjB,GAKAsB,WAAA,WACA,MAAAtB,IACiB,GAIjBgB,GACAA,EAAAK,OAiBA,GAbAf,EAAA,SAAAE,GACAE,IAAAD,KAAA,CACAD,OACAQ,OAAAH,GAAApB,EAAAuB,OACAP,KAAA,MAGAE,IACAA,GAAA,EACAC,MAIA,kBAAAnB,GACA,qBAAAA,EAAA8B,YAAA9B,EAAAa,SASAO,GAAA,EAEAD,EAAA,WACAnB,EAAAa,SAAAS,SAGK,uBAAAS,aAGLZ,EADA,qBAAAa,OACAD,aAAAE,KAAAD,OAAAV,GAEA,WACAS,aAAAT,SAIK,wBAAAY,eAAA,CAGL,IAAAC,EAAA,IAAAD,eAGAC,EAAAC,MAAAC,UAAA,WACAlB,EAAAmB,EACAH,EAAAC,MAAAC,UAAAf,EACAA,KAEA,IAAAgB,EAAA,WAGAH,EAAAI,MAAAC,YAAA,IAEArB,EAAA,WACAU,WAAAP,EAAA,GACAgB,UAKAnB,EAAA,WACAU,WAAAP,EAAA,IAaA,OAPAT,EAAA4B,SAAA,SAAA1B,GACAM,EAAAqB,KAAA3B,GACAG,IACAA,GAAA,EACAC,MAGAN,EAlJA,GA+JA8B,EAAAC,SAAAD,KACA,SAAAE,EAAAC,GACA,kBACA,OAAAH,EAAAI,MAAAD,EAAAE,YAOA,IA+FAC,EA/FAC,EAAAL,EAAAM,MAAAC,UAAAC,OAEAC,EAAAT,EACAM,MAAAC,UAAAG,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,EACAhC,EAAAiC,KAAAjC,OAEA,OAAAsB,UAAAtB,OAGA,GACA,GAAAgC,KAAAC,KAAA,CACAF,EAAAE,KAAAD,KACA,MAEA,KAAAA,GAAAhC,EACA,UAAAkC,gBAEa,GAGb,KAAcF,EAAAhC,EAAgBgC,IAE9BA,KAAAC,OACAF,EAAAD,EAAAC,EAAAE,KAAAD,OAGA,OAAAD,IAIAI,EAAAhB,EACAM,MAAAC,UAAAU,SAAA,SAAAC,GAEA,QAAAC,EAAA,EAAuBA,EAAAL,KAAAjC,OAAiBsC,IACxC,GAAAL,KAAAK,KAAAD,EACA,OAAAC,EAGA,WAIAC,EAAApB,EACAM,MAAAC,UAAAc,KAAA,SAAAV,EAAAW,GACA,IAAAC,EAAAT,KACAU,EAAA,GAIA,OAHAf,EAAAc,EAAA,SAAAE,EAAAP,EAAAL,GACAW,EAAA3B,KAAAc,EAAAb,KAAAwB,EAAAJ,EAAAL,EAAAU,UACS,GACTC,IAIAE,EAAAC,OAAAC,QAAA,SAAArB,GACA,SAAAsB,KAEA,OADAA,EAAAtB,YACA,IAAAsB,GAGAC,EAAAH,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAEA,OADAF,EAAAC,GAAAC,EAAAhB,MACAc,GAGAG,EAAAnC,EAAA2B,OAAApB,UAAA6B,gBAEAC,EAAAV,OAAAW,MAAA,SAAAC,GACA,IAAAD,EAAA,GACA,QAAAE,KAAAD,EACAJ,EAAAI,EAAAC,IACAF,EAAAzC,KAAA2C,GAGA,OAAAF,GAGAG,EAAAzC,EAAA2B,OAAApB,UAAAtB,UAEA,SAAAyD,EAAAxB,GACA,OAAAA,IAAAS,OAAAT,GAMA,SAAAyB,EAAAC,GACA,MACA,2BAAAH,EAAAG,IACAA,aAAAxC,EAQAA,EADA,qBAAAyC,YACAA,YAEA,SAAA3B,GACAJ,KAAAI,SAMA,IAAA4B,EAAA,uBAEA,SAAAC,EAAAC,EAAAC,GAGA,GAAAzF,GACAyF,EAAAtF,OACA,kBAAAqF,GACA,OAAAA,GACAA,EAAArF,MACA,CAEA,IADA,IAAAuF,EAAA,GACAC,EAAAF,EAA6BE,EAAKA,IAAAC,OAClCD,EAAAxF,SAAAqF,EAAAK,yBAAAL,EAAAK,wBAAAF,EAAAG,gBACAxB,EAAAkB,EAAA,2BAAyE9B,MAAAiC,EAAAG,aAAAC,cAAA,IACzEL,EAAAM,QAAAL,EAAAxF,QAGAuF,EAAAM,QAAAR,EAAArF,OAEA,IAAA8F,EAAAP,EAAAQ,KAAA,KAAAZ,EAAA,MACAnF,EAAAgG,EAAAF,GACA3B,EAAAkB,EAAA,SAA+C9B,MAAAvD,EAAA4F,cAAA,KAI/C,SAAAI,EAAAC,GAGA,IAFA,IAAAC,EAAAD,EAAAE,MAAA,MACAC,EAAA,GACA5C,EAAA,EAAmBA,EAAA0C,EAAAhF,SAAkBsC,EAAA,CACrC,IAAA6C,EAAAH,EAAA1C,GAEA8C,EAAAD,IAAAE,EAAAF,QACAD,EAAAlE,KAAAmE,GAGA,OAAAD,EAAAL,KAAA,MAGA,SAAAQ,EAAAC,GACA,WAAAA,EAAAlD,QAAA,iBACA,IAAAkD,EAAAlD,QAAA,aAGA,SAAAmD,EAAAD,GAGA,IAAAE,EAAA,gCAAAC,KAAAH,GACA,GAAAE,EACA,OAAAA,EAAA,GAAAE,OAAAF,EAAA,KAIA,IAAAG,EAAA,4BAAAF,KAAAH,GACA,GAAAK,EACA,OAAAA,EAAA,GAAAD,OAAAC,EAAA,KAIA,IAAAC,EAAA,iBAAAH,KAAAH,GACA,OAAAM,EACA,CAAAA,EAAA,GAAAF,OAAAE,EAAA,UADA,EAKA,SAAAR,EAAAE,GACA,IAAAO,EAAAN,EAAAD,GAEA,IAAAO,EACA,SAGA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEA,OAAAC,IAAA/G,GACAgH,GAAA/G,GACA+G,GAAAC,GAKA,SAAA/G,IACA,GAAAN,EAIA,IACA,UAAAC,MACK,MAAAC,IACL,IAAAmG,EAAAnG,GAAAC,MAAAmG,MAAA,MACAgB,EAAAjB,EAAA,GAAA5C,QAAA,OAAA4C,EAAA,GAAAA,EAAA,GACAa,EAAAN,EAAAU,GACA,IAAAJ,EACA,OAIA,OADA9G,EAAA8G,EAAA,GACAA,EAAA,IAIA,SAAAK,EAAApE,EAAAqE,EAAAC,GACA,kBAMA,MALA,qBAAAC,SACA,oBAAAA,QAAAC,MACAD,QAAAC,KAAAH,EAAA,uBAAAC,EACA,gBAAAxH,MAAA,IAAAE,OAEAgD,EAAAT,MAAAS,EAAAR,YAYA,SAAAiF,EAAAlE,GAIA,OAAAA,aAAAmE,EACAnE,EAIAoE,EAAApE,GACAqE,EAAArE,GAEAsE,EAAAtE,GAGAkE,EAAAK,QAAAL,EAMAA,EAAApH,WAKAoH,EAAAM,kBAAA,EAQA,IAAAC,EAAA,EAkBA,SAAAC,IAOA,IAAAC,EAAAC,EAAA,GAAAC,EAAA,GAEAC,EAAAtE,EAAAkE,EAAArF,WACA0C,EAAAvB,EAAA2D,EAAA9E,WAmCA,GAjCA0C,EAAAgD,gBAAA,SAAAR,EAAAS,EAAAC,GACA,IAAAC,EAAA/F,EAAAF,WACA2F,GACAA,EAAAjG,KAAAuG,GACA,SAAAF,GAAAC,EAAA,IACAJ,EAAAlG,KAAAsG,EAAA,KAGAf,EAAApH,SAAA,WACA6H,EAAAI,gBAAA/F,MAAA2F,EAAAO,MAMAnD,EAAAoD,QAAA,WACA,GAAAP,EACA,OAAA7C,EAEA,IAAAqD,EAAAC,EAAAV,GAIA,OAHAW,EAAAF,KACAT,EAAAS,GAEAA,GAGArD,EAAAwD,QAAA,WACA,OAAAZ,EAGAA,EAAAY,UAFA,CAAoBC,MAAA,YAKpBtB,EAAAM,kBAAAlI,EACA,IACA,UAAAC,MACS,MAAAC,IAOTuF,EAAAtF,MAAAD,GAAAC,MAAAgJ,UAAAjJ,GAAAC,MAAAsD,QAAA,SACAgC,EAAAK,aAAAqC,IAQA,SAAAiB,EAAAC,GACAhB,EAAAgB,EAEAzB,EAAAM,kBAAAlI,IAGAyF,EAAAG,OAAAyD,GAGApG,EAAAqF,EAAA,SAAArE,EAAAqF,GACA1B,EAAApH,SAAA,WACA6I,EAAAZ,gBAAA/F,MAAA2G,EAAAC,WAES,GAEThB,OAAA,EACAC,OAAA,EAsCA,OAnCAC,EAAA/C,UACA+C,EAAAP,QAAA,SAAAvE,GACA2E,GAIAe,EAAAxB,EAAAlE,KAGA8E,EAAAR,QAAA,SAAAtE,GACA2E,GAIAe,EAAApB,EAAAtE,KAEA8E,EAAAe,OAAA,SAAAC,GACAnB,GAIAe,EAAAG,EAAAC,KAEAhB,EAAAiB,OAAA,SAAAC,GACArB,GAIApF,EAAAsF,EAAA,SAAAtE,EAAA0F,GACA/B,EAAApH,SAAA,WACAmJ,EAAAD,WAES,IAGTlB,EA6BA,SAAA/C,EAAAmE,GACA,uBAAAA,EACA,UAAArG,UAAA,gCAEA,IAAAiF,EAAAJ,IACA,IACAwB,EAAApB,EAAAP,QAAAO,EAAAe,OAAAf,EAAAiB,QACK,MAAAD,GACLhB,EAAAe,OAAAC,GAEA,OAAAhB,EAAA/C,QAqDA,SAAAoE,EAAAC,GACA,OAAArE,EAAA,SAAAwC,EAAAsB,GAMA,QAAA5F,EAAA,EAAAoG,EAAAD,EAAAzI,OAA8CsC,EAAAoG,EAASpG,IACvDiE,EAAAkC,EAAAnG,IAAAqG,KAAA/B,EAAAsB,KAqBA,SAAA1B,EAAAnD,EAAAuF,EAAAhB,QACA,IAAAgB,IACAA,EAAA,SAAAvB,GACA,OAAAa,EAAA,IAAAtJ,MACA,uCAAAyI,WAIA,IAAAO,IACAA,EAAA,WACA,OAAoBC,MAAA,aAIpB,IAAAzD,EAAAvB,EAAA2D,EAAA9E,WAqBA,GAnBA0C,EAAAgD,gBAAA,SAAAR,EAAAS,EAAAE,GACA,IAAAsB,EACA,IAEAA,EADAxF,EAAAgE,GACAhE,EAAAgE,GAAAhG,MAAA+C,EAAAmD,GAEAqB,EAAA3H,KAAAmD,EAAAiD,EAAAE,GAES,MAAAxD,GACT8E,EAAAX,EAAAnE,GAEA6C,GACAA,EAAAiC,IAIAzE,EAAAwD,UAGAA,EAAA,CACA,IAAAkB,EAAAlB,IACA,aAAAkB,EAAAjB,QACAzD,EAAAL,UAAA+E,EAAAX,QAGA/D,EAAAoD,QAAA,WACA,IAAAsB,EAAAlB,IACA,kBAAAkB,EAAAjB,OACA,aAAAiB,EAAAjB,MACAzD,EAEA0E,EAAAzG,OAIA,OAAA+B,EAuHA,SAAA2E,EAAA1G,EAAA2G,EAAAC,EAAAC,GACA,OAAA3C,EAAAlE,GAAAsG,KAAAK,EAAAC,EAAAC,GA+BA,SAAAxB,EAAArF,GACA,GAAAsF,EAAAtF,GAAA,CACA,IAAAyG,EAAAzG,EAAAuF,UACA,iBAAAkB,EAAAjB,MACA,OAAAiB,EAAAzG,MAGA,OAAAA,EAQA,SAAAsF,EAAAjE,GACA,OAAAA,aAAA8C,EAIA,SAAAC,EAAA/C,GACA,OAAAG,EAAAH,IAAA,oBAAAA,EAAAiF,KAQA,SAAAQ,EAAAzF,GACA,OAAAiE,EAAAjE,IAAA,YAAAA,EAAAkE,UAAAC,MAYA,SAAAuB,EAAA1F,GACA,OAAAiE,EAAAjE,IAAA,cAAAA,EAAAkE,UAAAC,MAWA,SAAAwB,EAAA3F,GACA,OAAAiE,EAAAjE,IAAA,aAAAA,EAAAkE,UAAAC,MA/fA,kBAAAvJ,MAA8CwE,OAAA,CAAAwG,SAAA,aAAAC,SAAA,OAAezG,OAAA,CAAAwG,SAAA,aAAAC,SAAA,MAAWC,UACxEjD,EAAAM,kBAAA,GAaAN,EAAAQ,QA+HAA,EAAArF,UAAA+H,iBAAA,WACA,IAAA/G,EAAAT,KACA,gBAAAkC,EAAA9B,GACA8B,EACAzB,EAAAwF,OAAA/D,GACS7C,UAAAtB,OAAA,EACT0C,EAAAkE,QAAApF,EAAAF,UAAA,IAEAoB,EAAAkE,QAAAvE,KAWAkE,EAAAC,QAAApC,EACAmC,EAAAnC,UAcAA,EAAAoE,OACApE,EAAAsF,OACAtF,EAAA8D,SACA9D,EAAAwC,QAAAL,EAKAA,EAAAoD,WAAA,SAAAjG,GAGA,OAAAA,GAGA8C,EAAA9E,UAAAiI,WAAA,WAGA,OAAA1H,MAYAsE,EAAA1B,KAAA,SAAA+E,EAAAC,GACA,OAAAtD,EAAAqD,GAAA/E,KAAAgF,IAGArD,EAAA9E,UAAAmD,KAAA,SAAAiF,GACA,OAAAvD,EAAA,CAAAtE,KAAA6H,IAAAC,OAAA,SAAAH,EAAAC,GACA,GAAAD,IAAAC,EAEA,OAAAD,EAEA,UAAAhL,MAAA,+BAAAgL,EAAA,IAAAC,MAUAtD,EAAAiC,OAcAhC,EAAA9E,UAAA8G,KAAA,WACA,OAAAvG,KAAA0G,KAAApC,EAAAiC,OAcAjC,EAAAyD,YAAAxD,EAuDAA,EAAA9E,UAAAtB,SAAA,WACA,0BAGAoG,EAAA9E,UAAAiH,KAAA,SAAAK,EAAAC,EAAAC,GACA,IAAAxG,EAAAT,KACAkF,EAAAJ,IACAkD,GAAA,EAGA,SAAAC,EAAA7H,GACA,IACA,0BAAA2G,IAAA3G,KACS,MAAA0B,GACT,OAAAmE,EAAAnE,IAIA,SAAAoG,EAAApG,GACA,uBAAAkF,EAAA,CACA/E,EAAAH,EAAArB,GACA,IACA,OAAAuG,EAAAlF,GACa,MAAAqG,GACb,OAAAlC,EAAAkC,IAGA,OAAAlC,EAAAnE,GAGA,SAAAsG,EAAAhI,GACA,0BAAA6G,IAAA7G,KAyCA,OAtCAkE,EAAApH,SAAA,WACAuD,EAAA0E,gBAAA,SAAA/E,GACA4H,IAGAA,GAAA,EAEA9C,EAAAP,QAAAsD,EAAA7H,MACS,iBAAA0B,GACTkG,IAGAA,GAAA,EAEA9C,EAAAP,QAAAuD,EAAApG,UAKArB,EAAA0E,qBAAA,0BAAA/E,GACA,IAAAiI,EACAC,GAAA,EACA,IACAD,EAAAD,EAAAhI,GACS,MAAAxD,IAET,GADA0L,GAAA,GACAhE,EAAAiE,QAGA,MAAA3L,GAFA0H,EAAAiE,QAAA3L,IAMA0L,GACApD,EAAAiB,OAAAkC,MAIAnD,EAAA/C,SAGAmC,EAAAkE,IAAA,SAAArG,EAAAtC,GACA,OAAAyE,EAAAnC,GAAAqG,IAAA3I,IAeA0E,EAAA9E,UAAA+I,IAAA,SAAA3I,GAGA,OAFAA,EAAAyE,EAAAzE,GAEAG,KAAA0G,KAAA,SAAAtG,GACA,OAAAP,EAAA4I,MAAArI,GAAAsI,YAAAtI,MAoBAkE,EAAAwC,OAKAvC,EAAA9E,UAAAiJ,YAAA,SAAAtI,GACA,OAAAJ,KAAA0G,KAAA,WAAkC,OAAAtG,KAGlCkE,EAAAoE,YAAA,SAAAvG,EAAA/B,GACA,OAAAkE,EAAAnC,GAAAuG,YAAAtI,IAGAmE,EAAA9E,UAAAkJ,WAAA,SAAAzC,GACA,OAAAlG,KAAA0G,KAAA,WAAkC,MAAAR,KAGlC5B,EAAAqE,WAAA,SAAAxG,EAAA+D,GACA,OAAA5B,EAAAnC,GAAAwG,WAAAzC,IAcA5B,EAAAmB,SAeAnB,EAAAoB,YAKApB,EAAAE,iBASAF,EAAA4C,YAKA3C,EAAA9E,UAAAyH,UAAA,WACA,kBAAAlH,KAAA2F,UAAAC,OAOAtB,EAAA6C,cAKA5C,EAAA9E,UAAA0H,YAAA,WACA,oBAAAnH,KAAA2F,UAAAC,OAMAtB,EAAA8C,aAKA7C,EAAA9E,UAAA2H,WAAA,WACA,mBAAApH,KAAA2F,UAAAC,OASA,IAAAgD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,GAAA,EAEA,SAAAC,IACAJ,EAAA7K,OAAA,EACA8K,EAAA9K,OAAA,EAEAgL,IACAA,GAAA,GAIA,SAAAE,EAAA9G,EAAA+D,GACA6C,IAGA,kBAAA1M,GAAA,oBAAAA,EAAA6M,MACA5E,EAAApH,SAAA4B,SAAA,YACA,IAAAoB,EAAA2I,EAAA1G,KACA9F,EAAA6M,KAAA,qBAAAhD,EAAA/D,GACA2G,EAAA/J,KAAAoD,MAKA0G,EAAA9J,KAAAoD,GACA+D,GAAA,qBAAAA,EAAArJ,MACA+L,EAAA7J,KAAAmH,EAAArJ,OAEA+L,EAAA7J,KAAA,cAAAmH,IAIA,SAAAiD,EAAAhH,GACA,GAAA4G,EAAA,CAIA,IAAAK,EAAAlJ,EAAA2I,EAAA1G,IACA,IAAAiH,IACA,kBAAA/M,GAAA,oBAAAA,EAAA6M,MACA5E,EAAApH,SAAA4B,SAAA,WACA,IAAAuK,EAAAnJ,EAAA4I,EAAA3G,IACA,IAAAkH,IACAhN,EAAA6M,KAAA,mBAAAN,EAAAQ,GAAAjH,GACA2G,EAAAQ,OAAAD,EAAA,MAIAR,EAAAS,OAAAF,EAAA,GACAR,EAAAU,OAAAF,EAAA,KAyBA,SAAAnD,EAAAC,GACA,IAAAqD,EAAAhF,EAAA,CACAuC,KAAA,SAAAE,GAKA,OAHAA,GACAmC,EAAAnJ,MAEAgH,IAAAd,GAAAlG,OAEK,WACL,OAAAA,MACK,WACL,OAAgB4F,MAAA,WAAAM,YAMhB,OAFA+C,EAAAM,EAAArD,GAEAqD,EAQA,SAAA7E,EAAAtE,GACA,OAAAmE,EAAA,CACAuC,KAAA,WACA,OAAA1G,GAEAoJ,IAAA,SAAAtF,GACA,OAAA9D,EAAA8D,IAEAuF,IAAA,SAAAvF,EAAAwF,GACAtJ,EAAA8D,GAAAwF,GAEAC,OAAA,SAAAzF,UACA9D,EAAA8D,IAEA0F,KAAA,SAAA1F,EAAAoB,GAGA,cAAApB,QAAA,IAAAA,EACA9D,EAAAhB,WAAA,EAAAkG,GAEAlF,EAAA8D,GAAA9E,MAAAgB,EAAAkF,IAGAlG,MAAA,SAAAoB,EAAA8E,GACA,OAAAlF,EAAAhB,MAAAoB,EAAA8E,IAEA9D,KAAA,WACA,OAAAD,EAAAnB,UAEK,aACL,OAAgBwF,MAAA,YAAAxF,WAShB,SAAAqE,EAAAtC,GACA,IAAA+C,EAAAJ,IAQA,OAPAR,EAAApH,SAAA,WACA,IACAiF,EAAAuE,KAAAxB,EAAAP,QAAAO,EAAAe,OAAAf,EAAAiB,QACS,MAAArE,GACToD,EAAAe,OAAAnE,MAGAoD,EAAA/C,QAaA,SAAA0H,EAAApI,GACA,OAAA8C,EAAA,CACAuF,MAAA,cACK,SAAA1E,EAAAE,GACL,OAAAyE,GAAAtI,EAAA2D,EAAAE,IACK,WACL,OAAAhB,EAAA7C,GAAAkE,YAeA,SAAAmC,EAAA1H,EAAA2G,EAAAC,GACA,OAAA1C,EAAAlE,GAAA0H,OAAAf,EAAAC,GAoCA,SAAAgD,EAAAC,GACA,kBAGA,SAAAC,EAAAC,EAAAC,GACA,IAAAxD,EAUA,wBAAAyD,cAAA,CAEA,IACAzD,EAAA0D,EAAAH,GAAAC,GACiB,MAAAtI,GACjB,OAAAmE,EAAAnE,GAEA,OAAA8E,EAAAoB,KACA1D,EAAAsC,EAAAxG,OAEA0G,EAAAF,EAAAxG,MAAAP,EAAA0K,GAKA,IACA3D,EAAA0D,EAAAH,GAAAC,GACiB,MAAAtI,GACjB,OAAAD,EAAAC,GACAwC,EAAAxC,EAAA1B,OAEA6F,EAAAnE,GAGA,OAAAgF,EAAAF,EAAA/G,EAAA0K,GAGA,IAAAD,EAAAL,EAAA7K,MAAAY,KAAAX,WACAQ,EAAAqK,EAAA5L,KAAA4L,EAAA,QACAK,EAAAL,EAAA5L,KAAA4L,EAAA,SACA,OAAArK,KAYA,SAAA2K,GAAAP,GACA3F,EAAA0D,KAAA1D,EAAA0F,MAAAC,EAAA3F,IA6BA,SAAAmG,GAAArK,GACA,UAAAd,EAAAc,GAmBA,SAAAsK,GAAA7K,GACA,kBACA,OAAAiI,EAAA,CAAA9H,KAAAyH,GAAApI,YAAA,SAAAoB,EAAA6E,GACA,OAAAzF,EAAAT,MAAAqB,EAAA6E,MAaA,SAAAyE,GAAAtI,EAAA2D,EAAAE,GACA,OAAAhB,EAAA7C,GAAAsI,SAAA3E,EAAAE,GAiLA,SAAAmC,GAAAkD,GACA,OAAA7D,EAAA6D,EAAA,SAAAA,GACA,IAAAC,EAAA,EACA1F,EAAAJ,IA4BA,OA3BAnF,EAAAgL,EAAA,SAAAhK,EAAAwB,EAAApC,GACA,IAAA8K,EAEAnF,EAAAvD,IACA,eAAA0I,EAAA1I,EAAAwD,WAAAC,MAEA+E,EAAA5K,GAAA8K,EAAAzK,SAEAwK,EACA9D,EACA3E,EACA,SAAA/B,GACAuK,EAAA5K,GAAAK,EACA,MAAAwK,GACA1F,EAAAP,QAAAgG,IAGAzF,EAAAe,OACA,SAAAG,GACAlB,EAAAiB,OAAA,CAAyCpG,QAAAK,MAAAgG,aAIhC,GACT,IAAAwE,GACA1F,EAAAP,QAAAgG,GAEAzF,EAAA/C,UAiBA,SAAA2I,GAAAH,GACA,OAAAA,EAAA5M,OACA,OAAAuG,EAAAK,UAGA,IAAAO,EAAAZ,EAAAQ,QACA8F,EAAA,EA6BA,OA5BAjL,EAAAgL,EAAA,SAAAI,EAAAC,EAAAjL,GACA,IAAAoC,EAAAwI,EAAA5K,GAKA,SAAAkL,EAAArE,GACA1B,EAAAP,QAAAiC,GAEA,SAAAsE,EAAAC,GAEA,GADAP,IACA,IAAAA,EAAA,CACA,IAAArB,EAAA4B,GAAA,IAAAxO,MAAA,GAAAwO,GAEA5B,EAAAvD,QAAA,mGACAuD,EAAAvD,QAEAd,EAAAe,OAAAsD,IAGA,SAAA6B,EAAAhF,GACAlB,EAAAiB,OAAA,CACApG,QACAK,MAAAgG,IApBAwE,IAEA9D,EAAA3E,EAAA8I,EAAAC,EAAAE,SAqBKzK,GAELuE,EAAA/C,QAiBA,SAAAkJ,GAAAV,GACA,OAAA7D,EAAA6D,EAAA,SAAAA,GAEA,OADAA,EAAArK,EAAAqK,EAAArG,GACAwC,EAAAW,GAAAnH,EAAAqK,EAAA,SAAAxI,GACA,OAAA2E,EAAA3E,EAAAlF,QACS,WACT,OAAA0N,MAaA,SAAAW,GAAAX,GACA,OAAArG,EAAAqG,GAAAW,aAkDA,SAAAlF,GAAA3E,EAAAwF,GACA,OAAA3C,EAAA7C,GAAAiF,UAAA,SAAAO,GAuSA,SAAAsE,GAAA9J,EAAA+J,GACA,OAAAlH,EAAA7C,GAAA8J,QAAAC,GAt6BAlH,EAAA0E,2BAEA1E,EAAAmH,oBAAA,WAEA,OAAA7C,EAAAlJ,SAGA4E,EAAAoH,+BAAA,WACA1C,IACAD,GAAA,GAGAC,IAQA1E,EAAA2B,SA0BA3B,EAAAI,UA6DAJ,EAAAuF,SAqBAvF,EAAAwD,SAKAvD,EAAA9E,UAAAqI,OAAA,SAAAf,EAAAC,GACA,OAAAhH,KAAAyH,MAAAf,KAAA,SAAAiF,GACA,OAAA5E,EAAA3H,WAAA,EAAAuM,IACK3E,IA6BL1C,EAAA0F,QAyDA1F,EAAAkG,SA8BAlG,EAAA,UAAAmG,GAoBAnG,EAAAoG,YAgBApG,EAAAyF,YAKAxF,EAAA9E,UAAAsK,SAAA,SAAA3E,EAAAE,GACA,IAAA7E,EAAAT,KACAkF,EAAAJ,IAIA,OAHAR,EAAApH,SAAA,WACAuD,EAAA0E,gBAAAD,EAAAP,QAAAS,EAAAE,KAEAJ,EAAA/C,SASAmC,EAAAkF,IAAA,SAAA/H,EAAAC,GACA,OAAA4C,EAAA7C,GAAAsI,SAAA,OAAArI,KAGA6C,EAAA9E,UAAA+J,IAAA,SAAA9H,GACA,OAAA1B,KAAA+J,SAAA,OAAArI,KAUA4C,EAAAmF,IAAA,SAAAhI,EAAAC,EAAAtB,GACA,OAAAkE,EAAA7C,GAAAsI,SAAA,OAAArI,EAAAtB,KAGAmE,EAAA9E,UAAAgK,IAAA,SAAA/H,EAAAtB,GACA,OAAAJ,KAAA+J,SAAA,OAAArI,EAAAtB,KASAkE,EAAAsH,IACAtH,EAAA,mBAAA7C,EAAAC,GACA,OAAA4C,EAAA7C,GAAAsI,SAAA,UAAArI,KAGA6C,EAAA9E,UAAAmM,IACArH,EAAA9E,UAAA,mBAAAiC,GACA,OAAA1B,KAAA+J,SAAA,UAAArI,KAgBA4C,EAAAuH,OACAvH,EAAAsF,KAAA,SAAAnI,EAAAyC,EAAAoB,GACA,OAAAhB,EAAA7C,GAAAsI,SAAA,QAAA7F,EAAAoB,KAGAf,EAAA9E,UAAAoM,OACAtH,EAAA9E,UAAAmK,KAAA,SAAA1F,EAAAoB,GACA,OAAAtF,KAAA+J,SAAA,QAAA7F,EAAAoB,KAUAhB,EAAAwH,KACAxH,EAAAyH,MACAzH,EAAA0H,OAAA,SAAAvK,EAAAyC,GACA,OAAAI,EAAA7C,GAAAsI,SAAA,QAAA7F,EAAA3E,EAAAF,UAAA,MAGAkF,EAAA9E,UAAAqM,KACAvH,EAAA9E,UAAAsM,MACAxH,EAAA9E,UAAAuM,OAAA,SAAA9H,GACA,OAAAlE,KAAA+J,SAAA,QAAA7F,EAAA3E,EAAAF,UAAA,MAQAiF,EAAA2H,OAAA,SAAAxK,EAAA6D,GACA,OAAAhB,EAAA7C,GAAAsI,SAAA,gBAAAzE,KAGAf,EAAA9E,UAAAwM,OAAA,SAAA3G,GACA,OAAAtF,KAAA+J,SAAA,gBAAAzE,KAQAhB,EAAA,OACAA,EAAAmE,MAAA,SAAAhH,GACA,OAAA6C,EAAA7C,GAAAsI,SAAA,gBAAAxK,EAAAF,UAAA,MAGAkF,EAAA9E,UAAAgJ,MAAA,WACA,OAAAzI,KAAA+J,SAAA,gBAAAxK,EAAAF,cASAiF,EAAA4H,MAAA,SAAAzK,GACA,IAAAU,EAAAmC,EAAA7C,GACA6D,EAAA/F,EAAAF,UAAA,GACA,kBACA,OAAA8C,EAAA4H,SAAA,SACA/J,KACAsF,EAAA6G,OAAA5M,EAAAF,gBAIAkF,EAAA9E,UAAAyM,MAAA,WACA,IAAA/J,EAAAnC,KACAsF,EAAA/F,EAAAF,WACA,kBACA,OAAA8C,EAAA4H,SAAA,SACA/J,KACAsF,EAAA6G,OAAA5M,EAAAF,gBAWAiF,EAAA9C,KAAA,SAAAC,GACA,OAAA6C,EAAA7C,GAAAsI,SAAA,YAGAxF,EAAA9E,UAAA+B,KAAA,WACA,OAAAxB,KAAA+J,SAAA,YAYAzF,EAAAmD,OAoCAlD,EAAA9E,UAAAgI,IAAA,WACA,OAAAA,GAAAzH,OAUAsE,EAAAwG,OAwCAvG,EAAA9E,UAAAqL,IAAA,WACA,OAAAA,GAAA9K,OAYAsE,EAAA+G,YAAApH,EAAAoH,GAAA,4BAYA9G,EAAA9E,UAAA4L,YAAA,WACA,OAAAA,GAAArL,OAMAsE,EAAAgH,cAYA/G,EAAA9E,UAAA6L,WAAA,WACA,OAAAtL,KAAA0G,KAAA,SAAAiE,GACA,OAAAlD,GAAAnH,EAAAqK,EAAA,SAAAxI,GAEA,SAAAiK,IACA,OAAAjK,EAAAwD,UAEA,OAJAxD,EAAAmC,EAAAnC,GAIAA,EAAAuE,KAAA0F,WAcA9H,EAAA+H,KACA/H,EAAA,kBAAA7C,EAAAuF,GACA,OAAA1C,EAAA7C,GAAAiF,UAAA,EAAAM,IAGAzC,EAAA9E,UAAA4M,KACA9H,EAAA9E,UAAA,kBAAAuH,GACA,OAAAhH,KAAA0G,UAAA,EAAAM,IAWA1C,EAAA8B,YAKA7B,EAAA9E,UAAA2G,SAAA,SAAAa,GACA,OAAAjH,KAAA0G,UAAA,SAAAO,IAcA3C,EAAAgI,IACAhI,EAAA,oBAAA7C,EAAA5B,GACA,OAAAyE,EAAA7C,GAAA,WAAA5B,IAGA0E,EAAA9E,UAAA6M,IACA/H,EAAA9E,UAAA,oBAAAI,GACA,IAAAA,GAAA,oBAAAA,EAAAT,MACA,UAAAzC,MAAA,kCAGA,OADAkD,EAAAyE,EAAAzE,GACAG,KAAA0G,KAAA,SAAAtG,GACA,OAAAP,EAAA4I,QAAA/B,KAAA,WACA,OAAAtG,KAEK,SAAA8F,GAEL,OAAArG,EAAA4I,QAAA/B,KAAA,WACA,MAAAR,OAWA5B,EAAA0D,KAAA,SAAAvG,EAAAsF,EAAAC,EAAAZ,GACA,OAAA9B,EAAA7C,GAAAuG,KAAAjB,EAAAC,EAAAZ,IAGA7B,EAAA9E,UAAAuI,KAAA,SAAAjB,EAAAC,EAAAZ,GACA,IAAAmG,EAAA,SAAArK,GAGAoC,EAAApH,SAAA,WAEA,GADA+E,EAAAC,EAAAC,IACAmC,EAAAiE,QAGA,MAAArG,EAFAoC,EAAAiE,QAAArG,MAQAC,EAAA4E,GAAAC,GAAAZ,EACApG,KAAA0G,KAAAK,EAAAC,EAAAZ,GACApG,KAEA,kBAAA3D,QAAAuB,SACA2O,EAAAlQ,EAAAuB,OAAAU,KAAAiO,IAGApK,EAAAuE,UAAA,EAAA6F,IAYAjI,EAAAkI,QAAA,SAAA/K,EAAAgL,EAAAvK,GACA,OAAAoC,EAAA7C,GAAA+K,QAAAC,EAAAvK,IAGAqC,EAAA9E,UAAA+M,QAAA,SAAAC,EAAAvK,GACA,IAAAgD,EAAAJ,IACA4H,EAAAxO,WAAA,WACAgE,GAAA,kBAAAA,IACAA,EAAA,IAAAvF,MAAAuF,GAAA,mBAAAuK,EAAA,OACAvK,EAAAyK,KAAA,aAEAzH,EAAAe,OAAA/D,IACKuK,GAUL,OARAzM,KAAA0G,KAAA,SAAAtG,GACAwM,aAAAF,GACAxH,EAAAP,QAAAvE,IACK,SAAA0B,GACL8K,aAAAF,GACAxH,EAAAe,OAAAnE,IACKoD,EAAAiB,QAELjB,EAAA/C,SAYAmC,EAAAuI,MAAA,SAAApL,EAAA+K,GAKA,YAJA,IAAAA,IACAA,EAAA/K,EACAA,OAAA,GAEA6C,EAAA7C,GAAAoL,MAAAL,IAGAjI,EAAA9E,UAAAoN,MAAA,SAAAL,GACA,OAAAxM,KAAA0G,KAAA,SAAAtG,GACA,IAAA8E,EAAAJ,IAIA,OAHA5G,WAAA,WACAgH,EAAAP,QAAAvE,IACSoM,GACTtH,EAAA/C,WAaAmC,EAAAwI,QAAA,SAAAjN,EAAAyF,GACA,OAAAhB,EAAAzE,GAAAiN,QAAAxH,IAGAf,EAAA9E,UAAAqN,QAAA,SAAAxH,GACA,IAAAJ,EAAAJ,IACAiI,EAAAxN,EAAA+F,GAGA,OAFAyH,EAAAhO,KAAAmG,EAAAsC,oBACAxH,KAAAiM,OAAAc,GAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,SAYAmC,EAAA0I,OAAA,SAAAnN,GACA,IAAAyF,EAAA/F,EAAAF,UAAA,GACA,OAAAiF,EAAAzE,GAAAiN,QAAAxH,IAGAf,EAAA9E,UAAAuN,OAAA,WACA,IAAAD,EAAAxN,EAAAF,WACA6F,EAAAJ,IAGA,OAFAiI,EAAAhO,KAAAmG,EAAAsC,oBACAxH,KAAAiM,OAAAc,GAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,SAWAmC,EAAA2I,OACA3I,EAAA4I,UAAA,SAAArN,GACA,QAAAc,IAAAd,EACA,UAAAlD,MAAA,sCAEA,IAAAwQ,EAAA5N,EAAAF,UAAA,GACA,kBACA,IAAA0N,EAAAI,EAAAhB,OAAA5M,EAAAF,YACA6F,EAAAJ,IAGA,OAFAiI,EAAAhO,KAAAmG,EAAAsC,oBACAlD,EAAAzE,GAAAoM,OAAAc,GAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,UAIAoC,EAAA9E,UAAAwN,OACA1I,EAAA9E,UAAAyN,UAAA,WACA,IAAA5H,EAAA/F,EAAAF,WAEA,OADAiG,EAAA5C,QAAA1C,MACAsE,EAAA4I,UAAA9N,WAAA,EAAAkG,IAGAhB,EAAA8I,MAAA,SAAAvN,EAAAW,GACA,IAAA2M,EAAA5N,EAAAF,UAAA,GACA,kBACA,IAAA0N,EAAAI,EAAAhB,OAAA5M,EAAAF,YACA6F,EAAAJ,IAEA,SAAAuI,IACA,OAAAxN,EAAAT,MAAAoB,EAAAnB,WAGA,OALA0N,EAAAhO,KAAAmG,EAAAsC,oBAIAlD,EAAA+I,GAAApB,OAAAc,GAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,UAIAoC,EAAA9E,UAAA2N,MAAA,WACA,IAAA9H,EAAA/F,EAAAF,UAAA,GAEA,OADAiG,EAAA5C,QAAA1C,MACAsE,EAAA8I,MAAAhO,WAAA,EAAAkG,IAYAhB,EAAAgJ,QACAhJ,EAAAiJ,MAAA,SAAA9L,EAAAyC,EAAAoB,GACA,OAAAhB,EAAA7C,GAAA8L,MAAArJ,EAAAoB,IAGAf,EAAA9E,UAAA6N,QACA/I,EAAA9E,UAAA8N,MAAA,SAAArJ,EAAAoB,GACA,IAAAyH,EAAAxN,EAAA+F,GAAA,IACAJ,EAAAJ,IAGA,OAFAiI,EAAAhO,KAAAmG,EAAAsC,oBACAxH,KAAA+J,SAAA,QAAA7F,EAAA6I,IAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,SAaAmC,EAAAkJ,MACAlJ,EAAAmJ,OACAnJ,EAAAoJ,QAAA,SAAAjM,EAAAyC,GACA,IAAA6I,EAAAxN,EAAAF,UAAA,GACA6F,EAAAJ,IAGA,OAFAiI,EAAAhO,KAAAmG,EAAAsC,oBACAlD,EAAA7C,GAAAsI,SAAA,QAAA7F,EAAA6I,IAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,SAGAoC,EAAA9E,UAAA+N,MACAjJ,EAAA9E,UAAAgO,OACAlJ,EAAA9E,UAAAiO,QAAA,SAAAxJ,GACA,IAAA6I,EAAAxN,EAAAF,UAAA,GACA6F,EAAAJ,IAGA,OAFAiI,EAAAhO,KAAAmG,EAAAsC,oBACAxH,KAAA+J,SAAA,QAAA7F,EAAA6I,IAAAV,KAAAnH,EAAAe,QACAf,EAAA/C,SAaAmC,EAAAiH,WAKAhH,EAAA9E,UAAA8L,QAAA,SAAAC,GACA,IAAAA,EAWA,OAAAxL,KAVAA,KAAA0G,KAAA,SAAAtG,GACAkE,EAAApH,SAAA,WACAsO,EAAA,KAAApL,MAES,SAAA8B,GACToC,EAAApH,SAAA,WACAsO,EAAAtJ,QAQAoC,EAAAqJ,WAAA,WACA,UAAAhR,MAAA,uDAIA,IAAAoH,GAAA/G,IAEA,OAAAsH,kDCzhEA,SAAAsJ,GAAA,IAAAC,EAAA,qBAAAD,MACA,qBAAAnN,YACApC,OACAe,EAAAH,SAAAQ,UAAAL,MAiBA,SAAA0O,EAAAC,EAAAC,GACAhO,KAAAiO,IAAAF,EACA/N,KAAAkO,SAAAF,EAfAvR,EAAAyB,WAAA,WACA,WAAA4P,EAAA1O,EAAAJ,KAAAd,WAAA2P,EAAAxO,WAAAuN,eAEAnQ,EAAA0R,YAAA,WACA,WAAAL,EAAA1O,EAAAJ,KAAAmP,YAAAN,EAAAxO,WAAA+O,gBAEA3R,EAAAmQ,aACAnQ,EAAA2R,cAAA,SAAA5B,GACAA,GACAA,EAAA6B,SAQAP,EAAArO,UAAA6O,MAAAR,EAAArO,UAAA8O,IAAA,aACAT,EAAArO,UAAA4O,MAAA,WACArO,KAAAkO,SAAAlP,KAAA6O,EAAA7N,KAAAiO,MAIAxR,EAAA+R,OAAA,SAAAC,EAAAC,GACA9B,aAAA6B,EAAAE,gBACAF,EAAAG,aAAAF,GAGAjS,EAAAoS,SAAA,SAAAJ,GACA7B,aAAA6B,EAAAE,gBACAF,EAAAG,cAAA,GAGAnS,EAAAqS,aAAArS,EAAAsS,OAAA,SAAAN,GACA7B,aAAA6B,EAAAE,gBAEA,IAAAD,EAAAD,EAAAG,aACAF,GAAA,IACAD,EAAAE,eAAAzQ,WAAA,WACAuQ,EAAAO,YACAP,EAAAO,cACKN,KAKLO,EAAQ,QAIRxS,EAAA2B,aAAA,qBAAAqC,WAAArC,cACA,qBAAAwP,KAAAxP,cACA4B,WAAA5B,aACA3B,EAAAyS,eAAA,qBAAAzO,WAAAyO,gBACA,qBAAAtB,KAAAsB,gBACAlP,WAAAkP,6DC9DA,SAAAtB,EAAAvR,IAAA,SAAAuR,EAAAjN,GACA,aAEA,IAAAiN,EAAAxP,aAAA,CAIA,IAIA+Q,EAJAC,EAAA,EACAC,EAAA,GACAC,GAAA,EACAC,EAAA3B,EAAA4B,SAoJAC,EAAA5O,OAAA6O,gBAAA7O,OAAA6O,eAAA9B,GACA6B,OAAAvR,WAAAuR,EAAA7B,EAGU,qBAAV,GAAUzP,SAAAa,KAAA4O,EAAAvR,SAEVsT,IAEKC,IAELC,IAEKjC,EAAArP,eAELuR,IAEKP,GAAA,uBAAAA,EAAAQ,cAAA,UAELC,IAIAC,IAGAR,EAAArR,eACAqR,EAAAP,iBA3KA,SAAA9Q,EAAAyB,GAEA,oBAAAA,IACAA,EAAA,IAAAZ,SAAA,GAAAY,IAIA,IADA,IAAAyF,EAAA,IAAA9F,MAAAH,UAAAtB,OAAA,GACAsC,EAAA,EAAqBA,EAAAiF,EAAAvH,OAAiBsC,IACtCiF,EAAAjF,GAAAhB,UAAAgB,EAAA,GAGA,IAAAjD,EAAA,CAAkByC,WAAAyF,QAGlB,OAFA+J,EAAAD,GAAAhS,EACA+R,EAAAC,GACAA,IAGA,SAAAF,EAAAgB,UACAb,EAAAa,GAGA,SAAAC,EAAA/S,GACA,IAAAyC,EAAAzC,EAAAyC,SACAyF,EAAAlI,EAAAkI,KACA,OAAAA,EAAAvH,QACA,OACA8B,IACA,MACA,OACAA,EAAAyF,EAAA,IACA,MACA,OACAzF,EAAAyF,EAAA,GAAAA,EAAA,IACA,MACA,OACAzF,EAAAyF,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,QACAzF,EAAAT,MAAAuB,EAAA2E,GACA,OAIA,SAAA8K,EAAAF,GAGA,GAAAZ,EAGApR,WAAAkS,EAAA,EAAAF,OACS,CACT,IAAA9S,EAAAiS,EAAAa,GACA,GAAA9S,EAAA,CACAkS,GAAA,EACA,IACAa,EAAA/S,GACiB,QACjB8R,EAAAgB,GACAZ,GAAA,KAMA,SAAAK,IACAR,EAAA,SAAAe,GACA7T,EAAAa,SAAA,WAA0CkT,EAAAF,MAI1C,SAAAN,IAGA,GAAAhC,EAAA/O,cAAA+O,EAAAyC,cAAA,CACA,IAAAC,GAAA,EACAC,EAAA3C,EAAAlP,UAMA,OALAkP,EAAAlP,UAAA,WACA4R,GAAA,GAEA1C,EAAA/O,YAAA,QACA+O,EAAAlP,UAAA6R,EACAD,GAIA,SAAAT,IAKA,IAAAW,EAAA,gBAAAC,KAAAC,SAAA,IACAC,EAAA,SAAAC,GACAA,EAAAtO,SAAAsL,GACA,kBAAAgD,EAAAC,MACA,IAAAD,EAAAC,KAAA1Q,QAAAqQ,IACAJ,GAAAQ,EAAAC,KAAAnR,MAAA8Q,EAAAzS,UAIA6P,EAAAkD,iBACAlD,EAAAkD,iBAAA,UAAAH,GAAA,GAEA/C,EAAAmD,YAAA,YAAAJ,GAGAxB,EAAA,SAAAe,GACAtC,EAAA/O,YAAA2R,EAAAN,EAAA,MAIA,SAAAJ,IACA,IAAAtR,EAAA,IAAAD,eACAC,EAAAC,MAAAC,UAAA,SAAAkS,GACA,IAAAV,EAAAU,EAAAC,KACAT,EAAAF,IAGAf,EAAA,SAAAe,GACA1R,EAAAI,MAAAC,YAAAqR,IAIA,SAAAF,IACA,IAAAgB,EAAAzB,EAAA0B,gBACA9B,EAAA,SAAAe,GAGA,IAAAgB,EAAA3B,EAAAQ,cAAA,UACAmB,EAAAC,mBAAA,WACAf,EAAAF,GACAgB,EAAAC,mBAAA,KACAH,EAAAI,YAAAF,GACAA,EAAA,MAEAF,EAAAK,YAAAH,IAIA,SAAAjB,IACAd,EAAA,SAAAe,GACAhS,WAAAkS,EAAA,EAAAF,MAzJA,CAyLC,qBAAAzP,KAAA,qBAAAmN,EAAA5N,KAAA4N,EAAAnN,+DCzLD,IAAA6Q,EAASrC,EAAQ,QAAc9P,EAC/BoS,EAAAtS,SAAAQ,UACA+R,EAAA,wBACAC,EAAA,OAGAA,KAAAF,GAAkBtC,EAAQ,SAAgBqC,EAAAC,EAAAE,EAAA,CAC1ChP,cAAA,EACA+G,IAAA,WACA,IACA,UAAAxJ,MAAA0R,MAAAF,GAAA,GACK,MAAA5U,GACL,gDCZA,IAAA+U,EAAA,WAA0B,IAAAC,EAAA5R,KAAa6R,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,UAAoBE,GAAA,CAAIC,OAAA,SAAAC,GAAkD,OAAxBA,EAAAC,iBAAwBR,EAAAS,aAAAT,EAAAU,aAAwC,CAAAP,EAAA,gBAAqBQ,MAAA,CAAOC,MAAA,WAAkB,CAAAT,EAAA,WAAgBQ,MAAA,CAAOE,YAAA,kBAAArS,MAAAwR,EAAAc,iBAAAC,SAAA,IAA2EC,MAAA,CAAQxS,MAAAwR,EAAAU,SAAA,MAAAzS,SAAA,SAAAgT,GAAoDjB,EAAAkB,KAAAlB,EAAAU,SAAA,QAAAO,IAAqCE,WAAA,qBAA8B,GAAAhB,EAAA,OAAAA,EAAA,QAAAH,EAAAoB,GAAA,qBAAApB,EAAAqB,GAAA,WAAAC,GAA8E,OAAAnB,EAAA,qBAA+BrQ,IAAA,KAAAwR,EAAAX,MAAA,CAAkBY,KAAAvB,EAAAwB,YAAAF,IAA0BjB,GAAA,CAAKoB,UAAA,SAAAlB,GAA6BP,EAAA0B,mBAAAJ,GAA2BK,WAAA,SAAApB,GAA+BP,EAAA0B,mBAAA,MAA8BE,MAAA,SAAArB,GAA0BP,EAAAU,SAAAmB,OAAAP,SAA4B,GAAAnB,EAAA,MAAAA,EAAA,cAAgCQ,MAAA,CAAOE,YAAA,sCAAArS,MAAAwR,EAAA8B,uBAAAC,KAAA,KAAkGf,MAAA,CAAQxS,MAAAwR,EAAAU,SAAA,YAAAzS,SAAA,SAAAgT,GAA0DjB,EAAAkB,KAAAlB,EAAAU,SAAA,cAAAO,IAA2CE,WAAA,0BAAoChB,EAAA,MAAAA,EAAA,gBAA8BQ,MAAA,CAAOC,MAAA,iBAAwB,CAAAT,EAAA,eAAoBQ,MAAA,CAAOqB,SAAA,GAAAnB,YAAAb,EAAAiC,iBAAAC,mBAAA,oBAAAC,OAAA,WAA2G9B,GAAA,CAAK+B,OAAApC,EAAAqC,WAAuB,CAAAlC,EAAA,YAAiBmC,KAAA,aAAiB,CAAAtC,EAAAoB,GAAApB,EAAAuC,GAAAvC,EAAAiC,sBAAA,GAAAjC,EAAAU,SAAA,OAAAP,EAAA,OAA6EqC,YAAA,CAAaC,aAAA,QAAoBzC,EAAAqB,GAAArB,EAAAU,SAAAgC,OAAA,gBAAApB,GAAiD,OAAAnB,EAAA,WAAqBrQ,IAAAwR,EAAAX,MAAA,CAAagC,QAAA,SAAkB,CAAA3C,EAAAU,SAAAgC,OAAApB,EAAA,GAAAnB,EAAA,OAAAA,EAAA,QAAAH,EAAAoB,GAAApB,EAAAuC,GAAAvC,EAAA4C,GAAA,UAAA5C,GAAAU,SAAAgC,OAAApB,EAAA,aAAAnB,EAAA,qBAA6IQ,MAAA,CAAOY,KAAA,SAAelB,GAAA,CAAKuB,MAAA,SAAArB,GAAyB,OAAAP,EAAA6C,iBAAAvB,EAAA,QAAmC,GAAAtB,EAAA8C,SAAiB,GAAA9C,EAAA8C,MAAA,GAAA3C,EAAA,YAAiCQ,MAAA,CAAOoC,KAAA,WAAiB,CAAA/C,EAAAoB,GAAA,iBAC/zD4B,EAAA,uCC0DAC,uBAAA,CACAhE,KAAA,WACA,OACAyC,mBAAA,KACAhB,SAAA,CACAwC,MAAA,GACAC,YAAA,GACAtB,OAAA,KACAa,OAAA,MAIAU,MAAA,CACA3C,aAAApT,SACAwT,YAAA5R,QAEAoU,QAAA,WACAjV,KAAAyS,cAEAzS,KAAAsS,SAAAzR,OAAAqU,EAAA,KAAArU,CAAA,GAAAb,KAAAsS,SAAAtS,KAAAyS,aAGA,OAAAzS,KAAAsS,SAAAgC,OACAtU,KAAAsS,SAAAgC,OAAA,GAEAtU,KAAAsS,SAAAgC,OAAAzT,OAAAsU,EAAA,KAAAtU,CAAAb,KAAAyS,YAAA6B,UAIAc,aAAA,aAEAC,QAAA,CACAC,QADA,SACAC,GAEA,OAAAA,EAAArR,KACAqR,EAAArR,KAEAqR,IAIAC,SAAA,CACAC,cADA,WAEA,OAAAzV,KAAAsT,mBACAtT,KAAAsT,mBAEAtT,KAAAsS,SAAAmB,OACAzT,KAAAsS,SAAAmB,OAEAzT,KAAAyS,YACAzS,KAAAyS,YAAAgB,OAEA,GAGAiC,cAdA,WAeA,OAAA1V,KAAAsS,SAAAmB,OAGA,EAAAzT,KAAAyV,cAFA,GAIAE,SApBA,WAqBA,OAAA3V,KAAAsS,SAAAgC,OAAAvW,QAEA8V,iBAvBA,WAwBA,WAAA7T,KAAA2V,SACA3V,KAAA2V,SAAA,oBAEA3V,KAAA2V,SAAA,sBAEAjD,iBA7BA,WA8BA,OAAA1S,KAAAyS,aACAzS,KAAAyS,YAAAqC,OAEA,mBAEApB,uBAnCA,WAoCA,OAAA1T,KAAAyS,YACAzS,KAAAyS,YAAAsC,YAEA,KAGAa,QAAA,CACAxC,YADA,SACAF,GACA,OAAAA,GAAAlT,KAAAyV,cACA,OAEA,gBAGAhB,iBARA,SAQA1U,GACAC,KAAAsS,SAAAgC,OAAAhL,OAAAvJ,EAAA,IAEAkU,SAXA,SAWArX,GACA,QAAAyD,EAAA,EAAAA,EAAAzD,EAAAiZ,OAAAC,MAAA/X,OAAAsC,IACAL,KAAAsS,SAAAgC,OAAAvV,KAAAnC,EAAAiZ,OAAAC,MAAAzV,QC3JoV0V,EAAA,cCOpVC,EAAgBnV,OAAAoV,EAAA,KAAApV,CACdkV,EACApE,EACAiD,GACF,EACA,KACA,KACA,MAIesB,EAAA,KAAAF","file":"js/chunk-5cfc4c59.64e2b125.js","sourcesContent":["// vim:ts=4:sts=4:sw=4:\n/*!\n *\n * Copyright 2009-2017 Kris Kowal under the terms of the MIT\n * license found at https://github.com/kriskowal/q/blob/v1/LICENSE\n *\n * With parts by Tyler Close\n * Copyright 2007-2009 Tyler Close under the terms of the MIT X license found\n * at http://www.opensource.org/licenses/mit-license.html\n * Forked at ref_send.js version: 2009-05-11\n *\n * With parts by Mark Miller\n * Copyright (C) 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n(function (definition) {\n    \"use strict\";\n\n    // This file will function properly as a <script> tag, or a module\n    // using CommonJS and NodeJS or RequireJS module formats.  In\n    // Common/Node/RequireJS, the module exports the Q API and when\n    // executed as a simple <script>, it creates a Q global instead.\n\n    // Montage Require\n    if (typeof bootstrap === \"function\") {\n        bootstrap(\"promise\", definition);\n\n    // CommonJS\n    } else if (typeof exports === \"object\" && typeof module === \"object\") {\n        module.exports = definition();\n\n    // RequireJS\n    } else if (typeof define === \"function\" && define.amd) {\n        define(definition);\n\n    // SES (Secure EcmaScript)\n    } else if (typeof ses !== \"undefined\") {\n        if (!ses.ok()) {\n            return;\n        } else {\n            ses.makeQ = definition;\n        }\n\n    // <script>\n    } else if (typeof window !== \"undefined\" || typeof self !== \"undefined\") {\n        // Prefer window over self for add-on scripts. Use self for\n        // non-windowed contexts.\n        var global = typeof window !== \"undefined\" ? window : self;\n\n        // Get the `window` object, save the previous Q global\n        // and initialize Q as a global.\n        var previousQ = global.Q;\n        global.Q = definition();\n\n        // Add a noConflict function so Q can be removed from the\n        // global namespace.\n        global.Q.noConflict = function () {\n            global.Q = previousQ;\n            return this;\n        };\n\n    } else {\n        throw new Error(\"This environment was not anticipated by Q. Please file a bug.\");\n    }\n\n})(function () {\n\"use strict\";\n\nvar hasStacks = false;\ntry {\n    throw new Error();\n} catch (e) {\n    hasStacks = !!e.stack;\n}\n\n// All code after this point will be filtered from stack traces reported\n// by Q.\nvar qStartingLine = captureLine();\nvar qFileName;\n\n// shims\n\n// used for fallback in \"allResolved\"\nvar noop = function () {};\n\n// Use the fastest possible means to execute a task in a future turn\n// of the event loop.\nvar nextTick =(function () {\n    // linked list of tasks (single, with head node)\n    var head = {task: void 0, next: null};\n    var tail = head;\n    var flushing = false;\n    var requestTick = void 0;\n    var isNodeJS = false;\n    // queue for late tasks, used by unhandled rejection tracking\n    var laterQueue = [];\n\n    function flush() {\n        /* jshint loopfunc: true */\n        var task, domain;\n\n        while (head.next) {\n            head = head.next;\n            task = head.task;\n            head.task = void 0;\n            domain = head.domain;\n\n            if (domain) {\n                head.domain = void 0;\n                domain.enter();\n            }\n            runSingle(task, domain);\n\n        }\n        while (laterQueue.length) {\n            task = laterQueue.pop();\n            runSingle(task);\n        }\n        flushing = false;\n    }\n    // runs a single function in the async queue\n    function runSingle(task, domain) {\n        try {\n            task();\n\n        } catch (e) {\n            if (isNodeJS) {\n                // In node, uncaught exceptions are considered fatal errors.\n                // Re-throw them synchronously to interrupt flushing!\n\n                // Ensure continuation if the uncaught exception is suppressed\n                // listening \"uncaughtException\" events (as domains does).\n                // Continue in next event to avoid tick recursion.\n                if (domain) {\n                    domain.exit();\n                }\n                setTimeout(flush, 0);\n                if (domain) {\n                    domain.enter();\n                }\n\n                throw e;\n\n            } else {\n                // In browsers, uncaught exceptions are not fatal.\n                // Re-throw them asynchronously to avoid slow-downs.\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n\n        if (domain) {\n            domain.exit();\n        }\n    }\n\n    nextTick = function (task) {\n        tail = tail.next = {\n            task: task,\n            domain: isNodeJS && process.domain,\n            next: null\n        };\n\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n\n    if (typeof process === \"object\" &&\n        process.toString() === \"[object process]\" && process.nextTick) {\n        // Ensure Q is in a real Node environment, with a `process.nextTick`.\n        // To see through fake Node environments:\n        // * Mocha test runner - exposes a `process` global without a `nextTick`\n        // * Browserify - exposes a `process.nexTick` function that uses\n        //   `setTimeout`. In this case `setImmediate` is preferred because\n        //    it is faster. Browserify's `process.toString()` yields\n        //   \"[object Object]\", while in a real Node environment\n        //   `process.toString()` yields \"[object process]\".\n        isNodeJS = true;\n\n        requestTick = function () {\n            process.nextTick(flush);\n        };\n\n    } else if (typeof setImmediate === \"function\") {\n        // In IE10, Node.js 0.9+, or https://github.com/NobleJS/setImmediate\n        if (typeof window !== \"undefined\") {\n            requestTick = setImmediate.bind(window, flush);\n        } else {\n            requestTick = function () {\n                setImmediate(flush);\n            };\n        }\n\n    } else if (typeof MessageChannel !== \"undefined\") {\n        // modern browsers\n        // http://www.nonblocking.io/2011/06/windownexttick.html\n        var channel = new MessageChannel();\n        // At least Safari Version 6.0.5 (8536.30.1) intermittently cannot create\n        // working message ports the first time a page loads.\n        channel.port1.onmessage = function () {\n            requestTick = requestPortTick;\n            channel.port1.onmessage = flush;\n            flush();\n        };\n        var requestPortTick = function () {\n            // Opera requires us to provide a message payload, regardless of\n            // whether we use it.\n            channel.port2.postMessage(0);\n        };\n        requestTick = function () {\n            setTimeout(flush, 0);\n            requestPortTick();\n        };\n\n    } else {\n        // old browsers\n        requestTick = function () {\n            setTimeout(flush, 0);\n        };\n    }\n    // runs a task after all other tasks have been run\n    // this is useful for unhandled rejection tracking that needs to happen\n    // after all `then`d tasks have been run.\n    nextTick.runAfter = function (task) {\n        laterQueue.push(task);\n        if (!flushing) {\n            flushing = true;\n            requestTick();\n        }\n    };\n    return nextTick;\n})();\n\n// Attempt to make generics safe in the face of downstream\n// modifications.\n// There is no situation where this is necessary.\n// If you need a security guarantee, these primordials need to be\n// deeply frozen anyway, and if you don’t need a security guarantee,\n// this is just plain paranoid.\n// However, this **might** have the nice side-effect of reducing the size of\n// the minified code by reducing x.call() to merely x()\n// See Mark Miller’s explanation of what this does.\n// http://wiki.ecmascript.org/doku.php?id=conventions:safe_meta_programming\nvar call = Function.call;\nfunction uncurryThis(f) {\n    return function () {\n        return call.apply(f, arguments);\n    };\n}\n// This is equivalent, but slower:\n// uncurryThis = Function_bind.bind(Function_bind.call);\n// http://jsperf.com/uncurrythis\n\nvar array_slice = uncurryThis(Array.prototype.slice);\n\nvar array_reduce = uncurryThis(\n    Array.prototype.reduce || function (callback, basis) {\n        var index = 0,\n            length = this.length;\n        // concerning the initial value, if one is not provided\n        if (arguments.length === 1) {\n            // seek to the first value in the array, accounting\n            // for the possibility that is is a sparse array\n            do {\n                if (index in this) {\n                    basis = this[index++];\n                    break;\n                }\n                if (++index >= length) {\n                    throw new TypeError();\n                }\n            } while (1);\n        }\n        // reduce\n        for (; index < length; index++) {\n            // account for the possibility that the array is sparse\n            if (index in this) {\n                basis = callback(basis, this[index], index);\n            }\n        }\n        return basis;\n    }\n);\n\nvar array_indexOf = uncurryThis(\n    Array.prototype.indexOf || function (value) {\n        // not a very good shim, but good enough for our one use of it\n        for (var i = 0; i < this.length; i++) {\n            if (this[i] === value) {\n                return i;\n            }\n        }\n        return -1;\n    }\n);\n\nvar array_map = uncurryThis(\n    Array.prototype.map || function (callback, thisp) {\n        var self = this;\n        var collect = [];\n        array_reduce(self, function (undefined, value, index) {\n            collect.push(callback.call(thisp, value, index, self));\n        }, void 0);\n        return collect;\n    }\n);\n\nvar object_create = Object.create || function (prototype) {\n    function Type() { }\n    Type.prototype = prototype;\n    return new Type();\n};\n\nvar object_defineProperty = Object.defineProperty || function (obj, prop, descriptor) {\n    obj[prop] = descriptor.value;\n    return obj;\n};\n\nvar object_hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\n\nvar object_keys = Object.keys || function (object) {\n    var keys = [];\n    for (var key in object) {\n        if (object_hasOwnProperty(object, key)) {\n            keys.push(key);\n        }\n    }\n    return keys;\n};\n\nvar object_toString = uncurryThis(Object.prototype.toString);\n\nfunction isObject(value) {\n    return value === Object(value);\n}\n\n// generator related shims\n\n// FIXME: Remove this function once ES6 generators are in SpiderMonkey.\nfunction isStopIteration(exception) {\n    return (\n        object_toString(exception) === \"[object StopIteration]\" ||\n        exception instanceof QReturnValue\n    );\n}\n\n// FIXME: Remove this helper and Q.return once ES6 generators are in\n// SpiderMonkey.\nvar QReturnValue;\nif (typeof ReturnValue !== \"undefined\") {\n    QReturnValue = ReturnValue;\n} else {\n    QReturnValue = function (value) {\n        this.value = value;\n    };\n}\n\n// long stack traces\n\nvar STACK_JUMP_SEPARATOR = \"From previous event:\";\n\nfunction makeStackTraceLong(error, promise) {\n    // If possible, transform the error stack trace by removing Node and Q\n    // cruft, then concatenating with the stack trace of `promise`. See #57.\n    if (hasStacks &&\n        promise.stack &&\n        typeof error === \"object\" &&\n        error !== null &&\n        error.stack\n    ) {\n        var stacks = [];\n        for (var p = promise; !!p; p = p.source) {\n            if (p.stack && (!error.__minimumStackCounter__ || error.__minimumStackCounter__ > p.stackCounter)) {\n                object_defineProperty(error, \"__minimumStackCounter__\", {value: p.stackCounter, configurable: true});\n                stacks.unshift(p.stack);\n            }\n        }\n        stacks.unshift(error.stack);\n\n        var concatedStacks = stacks.join(\"\\n\" + STACK_JUMP_SEPARATOR + \"\\n\");\n        var stack = filterStackString(concatedStacks);\n        object_defineProperty(error, \"stack\", {value: stack, configurable: true});\n    }\n}\n\nfunction filterStackString(stackString) {\n    var lines = stackString.split(\"\\n\");\n    var desiredLines = [];\n    for (var i = 0; i < lines.length; ++i) {\n        var line = lines[i];\n\n        if (!isInternalFrame(line) && !isNodeFrame(line) && line) {\n            desiredLines.push(line);\n        }\n    }\n    return desiredLines.join(\"\\n\");\n}\n\nfunction isNodeFrame(stackLine) {\n    return stackLine.indexOf(\"(module.js:\") !== -1 ||\n           stackLine.indexOf(\"(node.js:\") !== -1;\n}\n\nfunction getFileNameAndLineNumber(stackLine) {\n    // Named functions: \"at functionName (filename:lineNumber:columnNumber)\"\n    // In IE10 function name can have spaces (\"Anonymous function\") O_o\n    var attempt1 = /at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec(stackLine);\n    if (attempt1) {\n        return [attempt1[1], Number(attempt1[2])];\n    }\n\n    // Anonymous functions: \"at filename:lineNumber:columnNumber\"\n    var attempt2 = /at ([^ ]+):(\\d+):(?:\\d+)$/.exec(stackLine);\n    if (attempt2) {\n        return [attempt2[1], Number(attempt2[2])];\n    }\n\n    // Firefox style: \"function@filename:lineNumber or @filename:lineNumber\"\n    var attempt3 = /.*@(.+):(\\d+)$/.exec(stackLine);\n    if (attempt3) {\n        return [attempt3[1], Number(attempt3[2])];\n    }\n}\n\nfunction isInternalFrame(stackLine) {\n    var fileNameAndLineNumber = getFileNameAndLineNumber(stackLine);\n\n    if (!fileNameAndLineNumber) {\n        return false;\n    }\n\n    var fileName = fileNameAndLineNumber[0];\n    var lineNumber = fileNameAndLineNumber[1];\n\n    return fileName === qFileName &&\n        lineNumber >= qStartingLine &&\n        lineNumber <= qEndingLine;\n}\n\n// discover own file name and line number range for filtering stack\n// traces\nfunction captureLine() {\n    if (!hasStacks) {\n        return;\n    }\n\n    try {\n        throw new Error();\n    } catch (e) {\n        var lines = e.stack.split(\"\\n\");\n        var firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\n        var fileNameAndLineNumber = getFileNameAndLineNumber(firstLine);\n        if (!fileNameAndLineNumber) {\n            return;\n        }\n\n        qFileName = fileNameAndLineNumber[0];\n        return fileNameAndLineNumber[1];\n    }\n}\n\nfunction deprecate(callback, name, alternative) {\n    return function () {\n        if (typeof console !== \"undefined\" &&\n            typeof console.warn === \"function\") {\n            console.warn(name + \" is deprecated, use \" + alternative +\n                         \" instead.\", new Error(\"\").stack);\n        }\n        return callback.apply(callback, arguments);\n    };\n}\n\n// end of shims\n// beginning of real work\n\n/**\n * Constructs a promise for an immediate reference, passes promises through, or\n * coerces promises from different systems.\n * @param value immediate reference or promise\n */\nfunction Q(value) {\n    // If the object is already a Promise, return it directly.  This enables\n    // the resolve function to both be used to created references from objects,\n    // but to tolerably coerce non-promises to promises.\n    if (value instanceof Promise) {\n        return value;\n    }\n\n    // assimilate thenables\n    if (isPromiseAlike(value)) {\n        return coerce(value);\n    } else {\n        return fulfill(value);\n    }\n}\nQ.resolve = Q;\n\n/**\n * Performs a task in a future turn of the event loop.\n * @param {Function} task\n */\nQ.nextTick = nextTick;\n\n/**\n * Controls whether or not long stack traces will be on\n */\nQ.longStackSupport = false;\n\n/**\n * The counter is used to determine the stopping point for building\n * long stack traces. In makeStackTraceLong we walk backwards through\n * the linked list of promises, only stacks which were created before\n * the rejection are concatenated.\n */\nvar longStackCounter = 1;\n\n// enable long stacks if Q_DEBUG is set\nif (typeof process === \"object\" && process && process.env && process.env.Q_DEBUG) {\n    Q.longStackSupport = true;\n}\n\n/**\n * Constructs a {promise, resolve, reject} object.\n *\n * `resolve` is a callback to invoke with a more resolved value for the\n * promise. To fulfill the promise, invoke `resolve` with any value that is\n * not a thenable. To reject the promise, invoke `resolve` with a rejected\n * thenable, or invoke `reject` with the reason directly. To resolve the\n * promise to another thenable, thus putting it in the same state, invoke\n * `resolve` with that other thenable.\n */\nQ.defer = defer;\nfunction defer() {\n    // if \"messages\" is an \"Array\", that indicates that the promise has not yet\n    // been resolved.  If it is \"undefined\", it has been resolved.  Each\n    // element of the messages array is itself an array of complete arguments to\n    // forward to the resolved promise.  We coerce the resolution value to a\n    // promise using the `resolve` function because it handles both fully\n    // non-thenable values and other thenables gracefully.\n    var messages = [], progressListeners = [], resolvedPromise;\n\n    var deferred = object_create(defer.prototype);\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, operands) {\n        var args = array_slice(arguments);\n        if (messages) {\n            messages.push(args);\n            if (op === \"when\" && operands[1]) { // progress operand\n                progressListeners.push(operands[1]);\n            }\n        } else {\n            Q.nextTick(function () {\n                resolvedPromise.promiseDispatch.apply(resolvedPromise, args);\n            });\n        }\n    };\n\n    // XXX deprecated\n    promise.valueOf = function () {\n        if (messages) {\n            return promise;\n        }\n        var nearerValue = nearer(resolvedPromise);\n        if (isPromise(nearerValue)) {\n            resolvedPromise = nearerValue; // shorten chain\n        }\n        return nearerValue;\n    };\n\n    promise.inspect = function () {\n        if (!resolvedPromise) {\n            return { state: \"pending\" };\n        }\n        return resolvedPromise.inspect();\n    };\n\n    if (Q.longStackSupport && hasStacks) {\n        try {\n            throw new Error();\n        } catch (e) {\n            // NOTE: don't try to use `Error.captureStackTrace` or transfer the\n            // accessor around; that causes memory leaks as per GH-111. Just\n            // reify the stack trace as a string ASAP.\n            //\n            // At the same time, cut off the first line; it's always just\n            // \"[object Promise]\\n\", as per the `toString`.\n            promise.stack = e.stack.substring(e.stack.indexOf(\"\\n\") + 1);\n            promise.stackCounter = longStackCounter++;\n        }\n    }\n\n    // NOTE: we do the checks for `resolvedPromise` in each method, instead of\n    // consolidating them into `become`, since otherwise we'd create new\n    // promises with the lines `become(whatever(value))`. See e.g. GH-252.\n\n    function become(newPromise) {\n        resolvedPromise = newPromise;\n\n        if (Q.longStackSupport && hasStacks) {\n            // Only hold a reference to the new promise if long stacks\n            // are enabled to reduce memory usage\n            promise.source = newPromise;\n        }\n\n        array_reduce(messages, function (undefined, message) {\n            Q.nextTick(function () {\n                newPromise.promiseDispatch.apply(newPromise, message);\n            });\n        }, void 0);\n\n        messages = void 0;\n        progressListeners = void 0;\n    }\n\n    deferred.promise = promise;\n    deferred.resolve = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(Q(value));\n    };\n\n    deferred.fulfill = function (value) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(fulfill(value));\n    };\n    deferred.reject = function (reason) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        become(reject(reason));\n    };\n    deferred.notify = function (progress) {\n        if (resolvedPromise) {\n            return;\n        }\n\n        array_reduce(progressListeners, function (undefined, progressListener) {\n            Q.nextTick(function () {\n                progressListener(progress);\n            });\n        }, void 0);\n    };\n\n    return deferred;\n}\n\n/**\n * Creates a Node-style callback that will resolve or reject the deferred\n * promise.\n * @returns a nodeback\n */\ndefer.prototype.makeNodeResolver = function () {\n    var self = this;\n    return function (error, value) {\n        if (error) {\n            self.reject(error);\n        } else if (arguments.length > 2) {\n            self.resolve(array_slice(arguments, 1));\n        } else {\n            self.resolve(value);\n        }\n    };\n};\n\n/**\n * @param resolver {Function} a function that returns nothing and accepts\n * the resolve, reject, and notify functions for a deferred.\n * @returns a promise that may be resolved with the given resolve and reject\n * functions, or rejected by a thrown exception in resolver\n */\nQ.Promise = promise; // ES6\nQ.promise = promise;\nfunction promise(resolver) {\n    if (typeof resolver !== \"function\") {\n        throw new TypeError(\"resolver must be a function.\");\n    }\n    var deferred = defer();\n    try {\n        resolver(deferred.resolve, deferred.reject, deferred.notify);\n    } catch (reason) {\n        deferred.reject(reason);\n    }\n    return deferred.promise;\n}\n\npromise.race = race; // ES6\npromise.all = all; // ES6\npromise.reject = reject; // ES6\npromise.resolve = Q; // ES6\n\n// XXX experimental.  This method is a way to denote that a local value is\n// serializable and should be immediately dispatched to a remote upon request,\n// instead of passing a reference.\nQ.passByCopy = function (object) {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return object;\n};\n\nPromise.prototype.passByCopy = function () {\n    //freeze(object);\n    //passByCopies.set(object, true);\n    return this;\n};\n\n/**\n * If two promises eventually fulfill to the same value, promises that value,\n * but otherwise rejects.\n * @param x {Any*}\n * @param y {Any*}\n * @returns {Any*} a promise for x and y if they are the same, but a rejection\n * otherwise.\n *\n */\nQ.join = function (x, y) {\n    return Q(x).join(y);\n};\n\nPromise.prototype.join = function (that) {\n    return Q([this, that]).spread(function (x, y) {\n        if (x === y) {\n            // TODO: \"===\" should be Object.is or equiv\n            return x;\n        } else {\n            throw new Error(\"Q can't join: not the same: \" + x + \" \" + y);\n        }\n    });\n};\n\n/**\n * Returns a promise for the first of an array of promises to become settled.\n * @param answers {Array[Any*]} promises to race\n * @returns {Any*} the first promise to be settled\n */\nQ.race = race;\nfunction race(answerPs) {\n    return promise(function (resolve, reject) {\n        // Switch to this once we can assume at least ES5\n        // answerPs.forEach(function (answerP) {\n        //     Q(answerP).then(resolve, reject);\n        // });\n        // Use this in the meantime\n        for (var i = 0, len = answerPs.length; i < len; i++) {\n            Q(answerPs[i]).then(resolve, reject);\n        }\n    });\n}\n\nPromise.prototype.race = function () {\n    return this.then(Q.race);\n};\n\n/**\n * Constructs a Promise with a promise descriptor object and optional fallback\n * function.  The descriptor contains methods like when(rejected), get(name),\n * set(name, value), post(name, args), and delete(name), which all\n * return either a value, a promise for a value, or a rejection.  The fallback\n * accepts the operation name, a resolver, and any further arguments that would\n * have been forwarded to the appropriate method above had a method been\n * provided with the proper name.  The API makes no guarantees about the nature\n * of the returned object, apart from that it is usable whereever promises are\n * bought and sold.\n */\nQ.makePromise = Promise;\nfunction Promise(descriptor, fallback, inspect) {\n    if (fallback === void 0) {\n        fallback = function (op) {\n            return reject(new Error(\n                \"Promise does not support operation: \" + op\n            ));\n        };\n    }\n    if (inspect === void 0) {\n        inspect = function () {\n            return {state: \"unknown\"};\n        };\n    }\n\n    var promise = object_create(Promise.prototype);\n\n    promise.promiseDispatch = function (resolve, op, args) {\n        var result;\n        try {\n            if (descriptor[op]) {\n                result = descriptor[op].apply(promise, args);\n            } else {\n                result = fallback.call(promise, op, args);\n            }\n        } catch (exception) {\n            result = reject(exception);\n        }\n        if (resolve) {\n            resolve(result);\n        }\n    };\n\n    promise.inspect = inspect;\n\n    // XXX deprecated `valueOf` and `exception` support\n    if (inspect) {\n        var inspected = inspect();\n        if (inspected.state === \"rejected\") {\n            promise.exception = inspected.reason;\n        }\n\n        promise.valueOf = function () {\n            var inspected = inspect();\n            if (inspected.state === \"pending\" ||\n                inspected.state === \"rejected\") {\n                return promise;\n            }\n            return inspected.value;\n        };\n    }\n\n    return promise;\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.then = function (fulfilled, rejected, progressed) {\n    var self = this;\n    var deferred = defer();\n    var done = false;   // ensure the untrusted promise makes at most a\n                        // single call to one of the callbacks\n\n    function _fulfilled(value) {\n        try {\n            return typeof fulfilled === \"function\" ? fulfilled(value) : value;\n        } catch (exception) {\n            return reject(exception);\n        }\n    }\n\n    function _rejected(exception) {\n        if (typeof rejected === \"function\") {\n            makeStackTraceLong(exception, self);\n            try {\n                return rejected(exception);\n            } catch (newException) {\n                return reject(newException);\n            }\n        }\n        return reject(exception);\n    }\n\n    function _progressed(value) {\n        return typeof progressed === \"function\" ? progressed(value) : value;\n    }\n\n    Q.nextTick(function () {\n        self.promiseDispatch(function (value) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_fulfilled(value));\n        }, \"when\", [function (exception) {\n            if (done) {\n                return;\n            }\n            done = true;\n\n            deferred.resolve(_rejected(exception));\n        }]);\n    });\n\n    // Progress propagator need to be attached in the current tick.\n    self.promiseDispatch(void 0, \"when\", [void 0, function (value) {\n        var newValue;\n        var threw = false;\n        try {\n            newValue = _progressed(value);\n        } catch (e) {\n            threw = true;\n            if (Q.onerror) {\n                Q.onerror(e);\n            } else {\n                throw e;\n            }\n        }\n\n        if (!threw) {\n            deferred.notify(newValue);\n        }\n    }]);\n\n    return deferred.promise;\n};\n\nQ.tap = function (promise, callback) {\n    return Q(promise).tap(callback);\n};\n\n/**\n * Works almost like \"finally\", but not called for rejections.\n * Original resolution value is passed through callback unaffected.\n * Callback may return a promise that will be awaited for.\n * @param {Function} callback\n * @returns {Q.Promise}\n * @example\n * doSomething()\n *   .then(...)\n *   .tap(console.log)\n *   .then(...);\n */\nPromise.prototype.tap = function (callback) {\n    callback = Q(callback);\n\n    return this.then(function (value) {\n        return callback.fcall(value).thenResolve(value);\n    });\n};\n\n/**\n * Registers an observer on a promise.\n *\n * Guarantees:\n *\n * 1. that fulfilled and rejected will be called only once.\n * 2. that either the fulfilled callback or the rejected callback will be\n *    called, but not both.\n * 3. that fulfilled and rejected will not be called in this turn.\n *\n * @param value      promise or immediate reference to observe\n * @param fulfilled  function to be called with the fulfilled value\n * @param rejected   function to be called with the rejection exception\n * @param progressed function to be called on any progress notifications\n * @return promise for the return value from the invoked callback\n */\nQ.when = when;\nfunction when(value, fulfilled, rejected, progressed) {\n    return Q(value).then(fulfilled, rejected, progressed);\n}\n\nPromise.prototype.thenResolve = function (value) {\n    return this.then(function () { return value; });\n};\n\nQ.thenResolve = function (promise, value) {\n    return Q(promise).thenResolve(value);\n};\n\nPromise.prototype.thenReject = function (reason) {\n    return this.then(function () { throw reason; });\n};\n\nQ.thenReject = function (promise, reason) {\n    return Q(promise).thenReject(reason);\n};\n\n/**\n * If an object is not a promise, it is as \"near\" as possible.\n * If a promise is rejected, it is as \"near\" as possible too.\n * If it’s a fulfilled promise, the fulfillment value is nearer.\n * If it’s a deferred promise and the deferred has been resolved, the\n * resolution is \"nearer\".\n * @param object\n * @returns most resolved (nearest) form of the object\n */\n\n// XXX should we re-do this?\nQ.nearer = nearer;\nfunction nearer(value) {\n    if (isPromise(value)) {\n        var inspected = value.inspect();\n        if (inspected.state === \"fulfilled\") {\n            return inspected.value;\n        }\n    }\n    return value;\n}\n\n/**\n * @returns whether the given object is a promise.\n * Otherwise it is a fulfilled value.\n */\nQ.isPromise = isPromise;\nfunction isPromise(object) {\n    return object instanceof Promise;\n}\n\nQ.isPromiseAlike = isPromiseAlike;\nfunction isPromiseAlike(object) {\n    return isObject(object) && typeof object.then === \"function\";\n}\n\n/**\n * @returns whether the given object is a pending promise, meaning not\n * fulfilled or rejected.\n */\nQ.isPending = isPending;\nfunction isPending(object) {\n    return isPromise(object) && object.inspect().state === \"pending\";\n}\n\nPromise.prototype.isPending = function () {\n    return this.inspect().state === \"pending\";\n};\n\n/**\n * @returns whether the given object is a value or fulfilled\n * promise.\n */\nQ.isFulfilled = isFulfilled;\nfunction isFulfilled(object) {\n    return !isPromise(object) || object.inspect().state === \"fulfilled\";\n}\n\nPromise.prototype.isFulfilled = function () {\n    return this.inspect().state === \"fulfilled\";\n};\n\n/**\n * @returns whether the given object is a rejected promise.\n */\nQ.isRejected = isRejected;\nfunction isRejected(object) {\n    return isPromise(object) && object.inspect().state === \"rejected\";\n}\n\nPromise.prototype.isRejected = function () {\n    return this.inspect().state === \"rejected\";\n};\n\n//// BEGIN UNHANDLED REJECTION TRACKING\n\n// This promise library consumes exceptions thrown in handlers so they can be\n// handled by a subsequent promise.  The exceptions get added to this array when\n// they are created, and removed when they are handled.  Note that in ES6 or\n// shimmed environments, this would naturally be a `Set`.\nvar unhandledReasons = [];\nvar unhandledRejections = [];\nvar reportedUnhandledRejections = [];\nvar trackUnhandledRejections = true;\n\nfunction resetUnhandledRejections() {\n    unhandledReasons.length = 0;\n    unhandledRejections.length = 0;\n\n    if (!trackUnhandledRejections) {\n        trackUnhandledRejections = true;\n    }\n}\n\nfunction trackRejection(promise, reason) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n    if (typeof process === \"object\" && typeof process.emit === \"function\") {\n        Q.nextTick.runAfter(function () {\n            if (array_indexOf(unhandledRejections, promise) !== -1) {\n                process.emit(\"unhandledRejection\", reason, promise);\n                reportedUnhandledRejections.push(promise);\n            }\n        });\n    }\n\n    unhandledRejections.push(promise);\n    if (reason && typeof reason.stack !== \"undefined\") {\n        unhandledReasons.push(reason.stack);\n    } else {\n        unhandledReasons.push(\"(no stack) \" + reason);\n    }\n}\n\nfunction untrackRejection(promise) {\n    if (!trackUnhandledRejections) {\n        return;\n    }\n\n    var at = array_indexOf(unhandledRejections, promise);\n    if (at !== -1) {\n        if (typeof process === \"object\" && typeof process.emit === \"function\") {\n            Q.nextTick.runAfter(function () {\n                var atReport = array_indexOf(reportedUnhandledRejections, promise);\n                if (atReport !== -1) {\n                    process.emit(\"rejectionHandled\", unhandledReasons[at], promise);\n                    reportedUnhandledRejections.splice(atReport, 1);\n                }\n            });\n        }\n        unhandledRejections.splice(at, 1);\n        unhandledReasons.splice(at, 1);\n    }\n}\n\nQ.resetUnhandledRejections = resetUnhandledRejections;\n\nQ.getUnhandledReasons = function () {\n    // Make a copy so that consumers can't interfere with our internal state.\n    return unhandledReasons.slice();\n};\n\nQ.stopUnhandledRejectionTracking = function () {\n    resetUnhandledRejections();\n    trackUnhandledRejections = false;\n};\n\nresetUnhandledRejections();\n\n//// END UNHANDLED REJECTION TRACKING\n\n/**\n * Constructs a rejected promise.\n * @param reason value describing the failure\n */\nQ.reject = reject;\nfunction reject(reason) {\n    var rejection = Promise({\n        \"when\": function (rejected) {\n            // note that the error has been handled\n            if (rejected) {\n                untrackRejection(this);\n            }\n            return rejected ? rejected(reason) : this;\n        }\n    }, function fallback() {\n        return this;\n    }, function inspect() {\n        return { state: \"rejected\", reason: reason };\n    });\n\n    // Note that the reason has not been handled.\n    trackRejection(rejection, reason);\n\n    return rejection;\n}\n\n/**\n * Constructs a fulfilled promise for an immediate reference.\n * @param value immediate reference\n */\nQ.fulfill = fulfill;\nfunction fulfill(value) {\n    return Promise({\n        \"when\": function () {\n            return value;\n        },\n        \"get\": function (name) {\n            return value[name];\n        },\n        \"set\": function (name, rhs) {\n            value[name] = rhs;\n        },\n        \"delete\": function (name) {\n            delete value[name];\n        },\n        \"post\": function (name, args) {\n            // Mark Miller proposes that post with no name should apply a\n            // promised function.\n            if (name === null || name === void 0) {\n                return value.apply(void 0, args);\n            } else {\n                return value[name].apply(value, args);\n            }\n        },\n        \"apply\": function (thisp, args) {\n            return value.apply(thisp, args);\n        },\n        \"keys\": function () {\n            return object_keys(value);\n        }\n    }, void 0, function inspect() {\n        return { state: \"fulfilled\", value: value };\n    });\n}\n\n/**\n * Converts thenables to Q promises.\n * @param promise thenable promise\n * @returns a Q promise\n */\nfunction coerce(promise) {\n    var deferred = defer();\n    Q.nextTick(function () {\n        try {\n            promise.then(deferred.resolve, deferred.reject, deferred.notify);\n        } catch (exception) {\n            deferred.reject(exception);\n        }\n    });\n    return deferred.promise;\n}\n\n/**\n * Annotates an object such that it will never be\n * transferred away from this process over any promise\n * communication channel.\n * @param object\n * @returns promise a wrapping of that object that\n * additionally responds to the \"isDef\" message\n * without a rejection.\n */\nQ.master = master;\nfunction master(object) {\n    return Promise({\n        \"isDef\": function () {}\n    }, function fallback(op, args) {\n        return dispatch(object, op, args);\n    }, function () {\n        return Q(object).inspect();\n    });\n}\n\n/**\n * Spreads the values of a promised array of arguments into the\n * fulfillment callback.\n * @param fulfilled callback that receives variadic arguments from the\n * promised array\n * @param rejected callback that receives the exception if the promise\n * is rejected.\n * @returns a promise for the return value or thrown exception of\n * either callback.\n */\nQ.spread = spread;\nfunction spread(value, fulfilled, rejected) {\n    return Q(value).spread(fulfilled, rejected);\n}\n\nPromise.prototype.spread = function (fulfilled, rejected) {\n    return this.all().then(function (array) {\n        return fulfilled.apply(void 0, array);\n    }, rejected);\n};\n\n/**\n * The async function is a decorator for generator functions, turning\n * them into asynchronous generators.  Although generators are only part\n * of the newest ECMAScript 6 drafts, this code does not cause syntax\n * errors in older engines.  This code should continue to work and will\n * in fact improve over time as the language improves.\n *\n * ES6 generators are currently part of V8 version 3.19 with the\n * --harmony-generators runtime flag enabled.  SpiderMonkey has had them\n * for longer, but under an older Python-inspired form.  This function\n * works on both kinds of generators.\n *\n * Decorates a generator function such that:\n *  - it may yield promises\n *  - execution will continue when that promise is fulfilled\n *  - the value of the yield expression will be the fulfilled value\n *  - it returns a promise for the return value (when the generator\n *    stops iterating)\n *  - the decorated function returns a promise for the return value\n *    of the generator or the first rejected promise among those\n *    yielded.\n *  - if an error is thrown in the generator, it propagates through\n *    every following yield until it is caught, or until it escapes\n *    the generator function altogether, and is translated into a\n *    rejection for the promise returned by the decorated generator.\n */\nQ.async = async;\nfunction async(makeGenerator) {\n    return function () {\n        // when verb is \"send\", arg is a value\n        // when verb is \"throw\", arg is an exception\n        function continuer(verb, arg) {\n            var result;\n\n            // Until V8 3.19 / Chromium 29 is released, SpiderMonkey is the only\n            // engine that has a deployed base of browsers that support generators.\n            // However, SM's generators use the Python-inspired semantics of\n            // outdated ES6 drafts.  We would like to support ES6, but we'd also\n            // like to make it possible to use generators in deployed browsers, so\n            // we also support Python-style generators.  At some point we can remove\n            // this block.\n\n            if (typeof StopIteration === \"undefined\") {\n                // ES6 Generators\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    return reject(exception);\n                }\n                if (result.done) {\n                    return Q(result.value);\n                } else {\n                    return when(result.value, callback, errback);\n                }\n            } else {\n                // SpiderMonkey Generators\n                // FIXME: Remove this case when SM does ES6 generators.\n                try {\n                    result = generator[verb](arg);\n                } catch (exception) {\n                    if (isStopIteration(exception)) {\n                        return Q(exception.value);\n                    } else {\n                        return reject(exception);\n                    }\n                }\n                return when(result, callback, errback);\n            }\n        }\n        var generator = makeGenerator.apply(this, arguments);\n        var callback = continuer.bind(continuer, \"next\");\n        var errback = continuer.bind(continuer, \"throw\");\n        return callback();\n    };\n}\n\n/**\n * The spawn function is a small wrapper around async that immediately\n * calls the generator and also ends the promise chain, so that any\n * unhandled errors are thrown instead of forwarded to the error\n * handler. This is useful because it's extremely common to run\n * generators at the top-level to work with libraries.\n */\nQ.spawn = spawn;\nfunction spawn(makeGenerator) {\n    Q.done(Q.async(makeGenerator)());\n}\n\n// FIXME: Remove this interface once ES6 generators are in SpiderMonkey.\n/**\n * Throws a ReturnValue exception to stop an asynchronous generator.\n *\n * This interface is a stop-gap measure to support generator return\n * values in older Firefox/SpiderMonkey.  In browsers that support ES6\n * generators like Chromium 29, just use \"return\" in your generator\n * functions.\n *\n * @param value the return value for the surrounding generator\n * @throws ReturnValue exception with the value.\n * @example\n * // ES6 style\n * Q.async(function* () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      return foo + bar;\n * })\n * // Older SpiderMonkey style\n * Q.async(function () {\n *      var foo = yield getFooPromise();\n *      var bar = yield getBarPromise();\n *      Q.return(foo + bar);\n * })\n */\nQ[\"return\"] = _return;\nfunction _return(value) {\n    throw new QReturnValue(value);\n}\n\n/**\n * The promised function decorator ensures that any promise arguments\n * are settled and passed as values (`this` is also settled and passed\n * as a value).  It will also ensure that the result of a function is\n * always a promise.\n *\n * @example\n * var add = Q.promised(function (a, b) {\n *     return a + b;\n * });\n * add(Q(a), Q(B));\n *\n * @param {function} callback The function to decorate\n * @returns {function} a function that has been decorated.\n */\nQ.promised = promised;\nfunction promised(callback) {\n    return function () {\n        return spread([this, all(arguments)], function (self, args) {\n            return callback.apply(self, args);\n        });\n    };\n}\n\n/**\n * sends a message to a value in a future turn\n * @param object* the recipient\n * @param op the name of the message operation, e.g., \"when\",\n * @param args further arguments to be forwarded to the operation\n * @returns result {Promise} a promise for the result of the operation\n */\nQ.dispatch = dispatch;\nfunction dispatch(object, op, args) {\n    return Q(object).dispatch(op, args);\n}\n\nPromise.prototype.dispatch = function (op, args) {\n    var self = this;\n    var deferred = defer();\n    Q.nextTick(function () {\n        self.promiseDispatch(deferred.resolve, op, args);\n    });\n    return deferred.promise;\n};\n\n/**\n * Gets the value of a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to get\n * @return promise for the property value\n */\nQ.get = function (object, key) {\n    return Q(object).dispatch(\"get\", [key]);\n};\n\nPromise.prototype.get = function (key) {\n    return this.dispatch(\"get\", [key]);\n};\n\n/**\n * Sets the value of a property in a future turn.\n * @param object    promise or immediate reference for object object\n * @param name      name of property to set\n * @param value     new value of property\n * @return promise for the return value\n */\nQ.set = function (object, key, value) {\n    return Q(object).dispatch(\"set\", [key, value]);\n};\n\nPromise.prototype.set = function (key, value) {\n    return this.dispatch(\"set\", [key, value]);\n};\n\n/**\n * Deletes a property in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of property to delete\n * @return promise for the return value\n */\nQ.del = // XXX legacy\nQ[\"delete\"] = function (object, key) {\n    return Q(object).dispatch(\"delete\", [key]);\n};\n\nPromise.prototype.del = // XXX legacy\nPromise.prototype[\"delete\"] = function (key) {\n    return this.dispatch(\"delete\", [key]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param value     a value to post, typically an array of\n *                  invocation arguments for promises that\n *                  are ultimately backed with `resolve` values,\n *                  as opposed to those backed with URLs\n *                  wherein the posted value can be any\n *                  JSON serializable object.\n * @return promise for the return value\n */\n// bound locally because it is used by other methods\nQ.mapply = // XXX As proposed by \"Redsandro\"\nQ.post = function (object, name, args) {\n    return Q(object).dispatch(\"post\", [name, args]);\n};\n\nPromise.prototype.mapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.post = function (name, args) {\n    return this.dispatch(\"post\", [name, args]);\n};\n\n/**\n * Invokes a method in a future turn.\n * @param object    promise or immediate reference for target object\n * @param name      name of method to invoke\n * @param ...args   array of invocation arguments\n * @return promise for the return value\n */\nQ.send = // XXX Mark Miller's proposed parlance\nQ.mcall = // XXX As proposed by \"Redsandro\"\nQ.invoke = function (object, name /*...args*/) {\n    return Q(object).dispatch(\"post\", [name, array_slice(arguments, 2)]);\n};\n\nPromise.prototype.send = // XXX Mark Miller's proposed parlance\nPromise.prototype.mcall = // XXX As proposed by \"Redsandro\"\nPromise.prototype.invoke = function (name /*...args*/) {\n    return this.dispatch(\"post\", [name, array_slice(arguments, 1)]);\n};\n\n/**\n * Applies the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param args      array of application arguments\n */\nQ.fapply = function (object, args) {\n    return Q(object).dispatch(\"apply\", [void 0, args]);\n};\n\nPromise.prototype.fapply = function (args) {\n    return this.dispatch(\"apply\", [void 0, args]);\n};\n\n/**\n * Calls the promised function in a future turn.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ[\"try\"] =\nQ.fcall = function (object /* ...args*/) {\n    return Q(object).dispatch(\"apply\", [void 0, array_slice(arguments, 1)]);\n};\n\nPromise.prototype.fcall = function (/*...args*/) {\n    return this.dispatch(\"apply\", [void 0, array_slice(arguments)]);\n};\n\n/**\n * Binds the promised function, transforming return values into a fulfilled\n * promise and thrown errors into a rejected one.\n * @param object    promise or immediate reference for target function\n * @param ...args   array of application arguments\n */\nQ.fbind = function (object /*...args*/) {\n    var promise = Q(object);\n    var args = array_slice(arguments, 1);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\nPromise.prototype.fbind = function (/*...args*/) {\n    var promise = this;\n    var args = array_slice(arguments);\n    return function fbound() {\n        return promise.dispatch(\"apply\", [\n            this,\n            args.concat(array_slice(arguments))\n        ]);\n    };\n};\n\n/**\n * Requests the names of the owned properties of a promised\n * object in a future turn.\n * @param object    promise or immediate reference for target object\n * @return promise for the keys of the eventually settled object\n */\nQ.keys = function (object) {\n    return Q(object).dispatch(\"keys\", []);\n};\n\nPromise.prototype.keys = function () {\n    return this.dispatch(\"keys\", []);\n};\n\n/**\n * Turns an array of promises into a promise for an array.  If any of\n * the promises gets rejected, the whole array is rejected immediately.\n * @param {Array*} an array (or promise for an array) of values (or\n * promises for values)\n * @returns a promise for an array of the corresponding values\n */\n// By Mark Miller\n// http://wiki.ecmascript.org/doku.php?id=strawman:concurrency&rev=1308776521#allfulfilled\nQ.all = all;\nfunction all(promises) {\n    return when(promises, function (promises) {\n        var pendingCount = 0;\n        var deferred = defer();\n        array_reduce(promises, function (undefined, promise, index) {\n            var snapshot;\n            if (\n                isPromise(promise) &&\n                (snapshot = promise.inspect()).state === \"fulfilled\"\n            ) {\n                promises[index] = snapshot.value;\n            } else {\n                ++pendingCount;\n                when(\n                    promise,\n                    function (value) {\n                        promises[index] = value;\n                        if (--pendingCount === 0) {\n                            deferred.resolve(promises);\n                        }\n                    },\n                    deferred.reject,\n                    function (progress) {\n                        deferred.notify({ index: index, value: progress });\n                    }\n                );\n            }\n        }, void 0);\n        if (pendingCount === 0) {\n            deferred.resolve(promises);\n        }\n        return deferred.promise;\n    });\n}\n\nPromise.prototype.all = function () {\n    return all(this);\n};\n\n/**\n * Returns the first resolved promise of an array. Prior rejected promises are\n * ignored.  Rejects only if all promises are rejected.\n * @param {Array*} an array containing values or promises for values\n * @returns a promise fulfilled with the value of the first resolved promise,\n * or a rejected promise if all promises are rejected.\n */\nQ.any = any;\n\nfunction any(promises) {\n    if (promises.length === 0) {\n        return Q.resolve();\n    }\n\n    var deferred = Q.defer();\n    var pendingCount = 0;\n    array_reduce(promises, function (prev, current, index) {\n        var promise = promises[index];\n\n        pendingCount++;\n\n        when(promise, onFulfilled, onRejected, onProgress);\n        function onFulfilled(result) {\n            deferred.resolve(result);\n        }\n        function onRejected(err) {\n            pendingCount--;\n            if (pendingCount === 0) {\n                var rejection = err || new Error(\"\" + err);\n\n                rejection.message = (\"Q can't get fulfillment value from any promise, all \" +\n                    \"promises were rejected. Last error message: \" + rejection.message);\n\n                deferred.reject(rejection);\n            }\n        }\n        function onProgress(progress) {\n            deferred.notify({\n                index: index,\n                value: progress\n            });\n        }\n    }, undefined);\n\n    return deferred.promise;\n}\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n/**\n * Waits for all promises to be settled, either fulfilled or\n * rejected.  This is distinct from `all` since that would stop\n * waiting at the first rejection.  The promise returned by\n * `allResolved` will never be rejected.\n * @param promises a promise for an array (or an array) of promises\n * (or values)\n * @return a promise for an array of promises\n */\nQ.allResolved = deprecate(allResolved, \"allResolved\", \"allSettled\");\nfunction allResolved(promises) {\n    return when(promises, function (promises) {\n        promises = array_map(promises, Q);\n        return when(all(array_map(promises, function (promise) {\n            return when(promise, noop, noop);\n        })), function () {\n            return promises;\n        });\n    });\n}\n\nPromise.prototype.allResolved = function () {\n    return allResolved(this);\n};\n\n/**\n * @see Promise#allSettled\n */\nQ.allSettled = allSettled;\nfunction allSettled(promises) {\n    return Q(promises).allSettled();\n}\n\n/**\n * Turns an array of promises into a promise for an array of their states (as\n * returned by `inspect`) when they have all settled.\n * @param {Array[Any*]} values an array (or promise for an array) of values (or\n * promises for values)\n * @returns {Array[State]} an array of states for the respective values.\n */\nPromise.prototype.allSettled = function () {\n    return this.then(function (promises) {\n        return all(array_map(promises, function (promise) {\n            promise = Q(promise);\n            function regardless() {\n                return promise.inspect();\n            }\n            return promise.then(regardless, regardless);\n        }));\n    });\n};\n\n/**\n * Captures the failure of a promise, giving an oportunity to recover\n * with a callback.  If the given promise is fulfilled, the returned\n * promise is fulfilled.\n * @param {Any*} promise for something\n * @param {Function} callback to fulfill the returned promise if the\n * given promise is rejected\n * @returns a promise for the return value of the callback\n */\nQ.fail = // XXX legacy\nQ[\"catch\"] = function (object, rejected) {\n    return Q(object).then(void 0, rejected);\n};\n\nPromise.prototype.fail = // XXX legacy\nPromise.prototype[\"catch\"] = function (rejected) {\n    return this.then(void 0, rejected);\n};\n\n/**\n * Attaches a listener that can respond to progress notifications from a\n * promise's originating deferred. This listener receives the exact arguments\n * passed to ``deferred.notify``.\n * @param {Any*} promise for something\n * @param {Function} callback to receive any progress notifications\n * @returns the given promise, unchanged\n */\nQ.progress = progress;\nfunction progress(object, progressed) {\n    return Q(object).then(void 0, void 0, progressed);\n}\n\nPromise.prototype.progress = function (progressed) {\n    return this.then(void 0, void 0, progressed);\n};\n\n/**\n * Provides an opportunity to observe the settling of a promise,\n * regardless of whether the promise is fulfilled or rejected.  Forwards\n * the resolution to the returned promise when the callback is done.\n * The callback can return a promise to defer completion.\n * @param {Any*} promise\n * @param {Function} callback to observe the resolution of the given\n * promise, takes no arguments.\n * @returns a promise for the resolution of the given promise when\n * ``fin`` is done.\n */\nQ.fin = // XXX legacy\nQ[\"finally\"] = function (object, callback) {\n    return Q(object)[\"finally\"](callback);\n};\n\nPromise.prototype.fin = // XXX legacy\nPromise.prototype[\"finally\"] = function (callback) {\n    if (!callback || typeof callback.apply !== \"function\") {\n        throw new Error(\"Q can't apply finally callback\");\n    }\n    callback = Q(callback);\n    return this.then(function (value) {\n        return callback.fcall().then(function () {\n            return value;\n        });\n    }, function (reason) {\n        // TODO attempt to recycle the rejection with \"this\".\n        return callback.fcall().then(function () {\n            throw reason;\n        });\n    });\n};\n\n/**\n * Terminates a chain of promises, forcing rejections to be\n * thrown as exceptions.\n * @param {Any*} promise at the end of a chain of promises\n * @returns nothing\n */\nQ.done = function (object, fulfilled, rejected, progress) {\n    return Q(object).done(fulfilled, rejected, progress);\n};\n\nPromise.prototype.done = function (fulfilled, rejected, progress) {\n    var onUnhandledError = function (error) {\n        // forward to a future turn so that ``when``\n        // does not catch it and turn it into a rejection.\n        Q.nextTick(function () {\n            makeStackTraceLong(error, promise);\n            if (Q.onerror) {\n                Q.onerror(error);\n            } else {\n                throw error;\n            }\n        });\n    };\n\n    // Avoid unnecessary `nextTick`ing via an unnecessary `when`.\n    var promise = fulfilled || rejected || progress ?\n        this.then(fulfilled, rejected, progress) :\n        this;\n\n    if (typeof process === \"object\" && process && process.domain) {\n        onUnhandledError = process.domain.bind(onUnhandledError);\n    }\n\n    promise.then(void 0, onUnhandledError);\n};\n\n/**\n * Causes a promise to be rejected if it does not get fulfilled before\n * some milliseconds time out.\n * @param {Any*} promise\n * @param {Number} milliseconds timeout\n * @param {Any*} custom error message or Error object (optional)\n * @returns a promise for the resolution of the given promise if it is\n * fulfilled before the timeout, otherwise rejected.\n */\nQ.timeout = function (object, ms, error) {\n    return Q(object).timeout(ms, error);\n};\n\nPromise.prototype.timeout = function (ms, error) {\n    var deferred = defer();\n    var timeoutId = setTimeout(function () {\n        if (!error || \"string\" === typeof error) {\n            error = new Error(error || \"Timed out after \" + ms + \" ms\");\n            error.code = \"ETIMEDOUT\";\n        }\n        deferred.reject(error);\n    }, ms);\n\n    this.then(function (value) {\n        clearTimeout(timeoutId);\n        deferred.resolve(value);\n    }, function (exception) {\n        clearTimeout(timeoutId);\n        deferred.reject(exception);\n    }, deferred.notify);\n\n    return deferred.promise;\n};\n\n/**\n * Returns a promise for the given value (or promised value), some\n * milliseconds after it resolved. Passes rejections immediately.\n * @param {Any*} promise\n * @param {Number} milliseconds\n * @returns a promise for the resolution of the given promise after milliseconds\n * time has elapsed since the resolution of the given promise.\n * If the given promise rejects, that is passed immediately.\n */\nQ.delay = function (object, timeout) {\n    if (timeout === void 0) {\n        timeout = object;\n        object = void 0;\n    }\n    return Q(object).delay(timeout);\n};\n\nPromise.prototype.delay = function (timeout) {\n    return this.then(function (value) {\n        var deferred = defer();\n        setTimeout(function () {\n            deferred.resolve(value);\n        }, timeout);\n        return deferred.promise;\n    });\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided as an array, and returns a promise.\n *\n *      Q.nfapply(FS.readFile, [__filename])\n *      .then(function (content) {\n *      })\n *\n */\nQ.nfapply = function (callback, args) {\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfapply = function (args) {\n    var deferred = defer();\n    var nodeArgs = array_slice(args);\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Passes a continuation to a Node function, which is called with the given\n * arguments provided individually, and returns a promise.\n * @example\n * Q.nfcall(FS.readFile, __filename)\n * .then(function (content) {\n * })\n *\n */\nQ.nfcall = function (callback /*...args*/) {\n    var args = array_slice(arguments, 1);\n    return Q(callback).nfapply(args);\n};\n\nPromise.prototype.nfcall = function (/*...args*/) {\n    var nodeArgs = array_slice(arguments);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.fapply(nodeArgs).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Wraps a NodeJS continuation passing function and returns an equivalent\n * version that returns a promise.\n * @example\n * Q.nfbind(FS.readFile, __filename)(\"utf-8\")\n * .then(console.log)\n * .done()\n */\nQ.nfbind =\nQ.denodeify = function (callback /*...args*/) {\n    if (callback === undefined) {\n        throw new Error(\"Q can't wrap an undefined function\");\n    }\n    var baseArgs = array_slice(arguments, 1);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        Q(callback).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nfbind =\nPromise.prototype.denodeify = function (/*...args*/) {\n    var args = array_slice(arguments);\n    args.unshift(this);\n    return Q.denodeify.apply(void 0, args);\n};\n\nQ.nbind = function (callback, thisp /*...args*/) {\n    var baseArgs = array_slice(arguments, 2);\n    return function () {\n        var nodeArgs = baseArgs.concat(array_slice(arguments));\n        var deferred = defer();\n        nodeArgs.push(deferred.makeNodeResolver());\n        function bound() {\n            return callback.apply(thisp, arguments);\n        }\n        Q(bound).fapply(nodeArgs).fail(deferred.reject);\n        return deferred.promise;\n    };\n};\n\nPromise.prototype.nbind = function (/*thisp, ...args*/) {\n    var args = array_slice(arguments, 0);\n    args.unshift(this);\n    return Q.nbind.apply(void 0, args);\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback with a given array of arguments, plus a provided callback.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param {Array} args arguments to pass to the method; the callback\n * will be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nmapply = // XXX As proposed by \"Redsandro\"\nQ.npost = function (object, name, args) {\n    return Q(object).npost(name, args);\n};\n\nPromise.prototype.nmapply = // XXX As proposed by \"Redsandro\"\nPromise.prototype.npost = function (name, args) {\n    var nodeArgs = array_slice(args || []);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * Calls a method of a Node-style object that accepts a Node-style\n * callback, forwarding the given variadic arguments, plus a provided\n * callback argument.\n * @param object an object that has the named method\n * @param {String} name name of the method of object\n * @param ...args arguments to pass to the method; the callback will\n * be provided by Q and appended to these arguments.\n * @returns a promise for the value or error\n */\nQ.nsend = // XXX Based on Mark Miller's proposed \"send\"\nQ.nmcall = // XXX Based on \"Redsandro's\" proposal\nQ.ninvoke = function (object, name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 2);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    Q(object).dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\nPromise.prototype.nsend = // XXX Based on Mark Miller's proposed \"send\"\nPromise.prototype.nmcall = // XXX Based on \"Redsandro's\" proposal\nPromise.prototype.ninvoke = function (name /*...args*/) {\n    var nodeArgs = array_slice(arguments, 1);\n    var deferred = defer();\n    nodeArgs.push(deferred.makeNodeResolver());\n    this.dispatch(\"post\", [name, nodeArgs]).fail(deferred.reject);\n    return deferred.promise;\n};\n\n/**\n * If a function would like to support both Node continuation-passing-style and\n * promise-returning-style, it can end its internal promise chain with\n * `nodeify(nodeback)`, forwarding the optional nodeback argument.  If the user\n * elects to use a nodeback, the result will be sent there.  If they do not\n * pass a nodeback, they will receive the result promise.\n * @param object a result (or a promise for a result)\n * @param {Function} nodeback a Node.js-style callback\n * @returns either the promise or nothing\n */\nQ.nodeify = nodeify;\nfunction nodeify(object, nodeback) {\n    return Q(object).nodeify(nodeback);\n}\n\nPromise.prototype.nodeify = function (nodeback) {\n    if (nodeback) {\n        this.then(function (value) {\n            Q.nextTick(function () {\n                nodeback(null, value);\n            });\n        }, function (error) {\n            Q.nextTick(function () {\n                nodeback(error);\n            });\n        });\n    } else {\n        return this;\n    }\n};\n\nQ.noConflict = function() {\n    throw new Error(\"Q.noConflict only works when Q is used as a global\");\n};\n\n// All code before this point will be filtered from stack traces.\nvar qEndingLine = captureLine();\n\nreturn Q;\n\n});\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.handleSubmit(_vm.formData)}}},[_c('b-form-group',{attrs:{\"label\":\"Title:\"}},[_c('b-input',{attrs:{\"placeholder\":\"Title of Review\",\"value\":_vm.titlePlaceholder,\"required\":\"\"},model:{value:(_vm.formData.title),callback:function ($$v) {_vm.$set(_vm.formData, \"title\", $$v)},expression:\"formData.title\"}})],1),_c('div',[_c('span',[_vm._v(\"Your Rating:   \")]),_vm._l((5),function(n){return _c('font-awesome-icon',{key:'ws'+n,attrs:{\"icon\":_vm.getIconType(n)},on:{\"mouseover\":function($event){_vm.hoverOverStarIndex = n},\"mouseleave\":function($event){_vm.hoverOverStarIndex = null},\"click\":function($event){_vm.formData.rating = n}}})})],2),_c('br'),_c('b-textarea',{attrs:{\"placeholder\":\"What did you think of this product?\",\"value\":_vm.descriptionPlaceholder,\"rows\":\"5\"},model:{value:(_vm.formData.description),callback:function ($$v) {_vm.$set(_vm.formData, \"description\", $$v)},expression:\"formData.description\"}}),_c('br'),_c('b-form-group',{attrs:{\"label\":\"Photo Upload\"}},[_c('b-form-file',{attrs:{\"multiple\":\"\",\"placeholder\":_vm.fileInputMessage,\"drop-placeholder\":\"Drop file here...\",\"accept\":\"image/*\"},on:{\"change\":_vm.addFiles}},[_c('template',{slot:\"file-name\"},[_vm._v(_vm._s(_vm.fileInputMessage))])],2),(_vm.formData.images)?_c('div',{staticStyle:{\"margin-top\":\"5px\"}},_vm._l((_vm.formData.images.length),function(n){return _c('b-badge',{key:n,attrs:{\"variant\":\"dark\"}},[(_vm.formData.images[n-1])?_c('div',[_c('span',[_vm._v(_vm._s(_vm._f(\"getName\")(_vm.formData.images[n-1]))+\"  \")]),_c('font-awesome-icon',{attrs:{\"icon\":\"times\"},on:{\"click\":function($event){return _vm.handleDeleteFile(n-1)}}})],1):_vm._e()])}),1):_vm._e()],1),_c('b-button',{attrs:{\"type\":\"submit\"}},[_vm._v(\"Submit\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <b-form @submit.prevent=\"handleSubmit(formData)\">\n    <b-form-group label=\"Title:\">\n      <b-input\n        placeholder=\"Title of Review\"\n        :value=\"titlePlaceholder\"\n        v-model=\"formData.title\"\n        required\n      />\n    </b-form-group>\n\n    <div>\n      <span>Your Rating: &nbsp;&nbsp;</span>\n      <font-awesome-icon\n        v-for=\"n in 5\"\n        :icon=\"getIconType(n)\"\n        :key=\"'ws'+n\"\n        @mouseover=\"hoverOverStarIndex = n\"\n        @mouseleave=\"hoverOverStarIndex = null\"\n        @click=\"formData.rating = n\"\n      />\n    </div>\n    <br>\n    <b-textarea\n      placeholder=\"What did you think of this product?\"\n      :value=\"descriptionPlaceholder\"\n      rows=\"5\"\n      v-model=\"formData.description\"\n    />\n    <br>\n\n    <b-form-group label=\"Photo Upload\">\n      <b-form-file\n        @change=\"addFiles\"\n        multiple\n        :placeholder=\"fileInputMessage\"\n        drop-placeholder=\"Drop file here...\"\n        accept=\"image/*\"\n      >\n        <template slot=\"file-name\">{{fileInputMessage}}</template>\n      </b-form-file>\n\n      <div v-if=\"formData.images\" style=\"margin-top:5px\">\n        <b-badge v-for=\"n in formData.images.length\" :key=\"n\" variant=\"dark\">\n          <div v-if=\"formData.images[n-1]\">\n            <span>{{formData.images[n-1] | getName}} &nbsp;</span>\n            <font-awesome-icon icon=\"times\" @click=\"handleDeleteFile(n-1)\"/>\n          </div>\n        </b-badge>\n      </div>\n    </b-form-group>\n\n    <b-button type=\"submit\">Submit</b-button>\n  </b-form>\n</template>\n\n<script>\nimport { timeout } from \"q\";\nimport { setTimeout } from \"timers\";\nexport default {\n  data: () => {\n    return {\n      hoverOverStarIndex: null,\n      formData: {\n        title: \"\",\n        description: \"\",\n        rating: null,\n        images: []\n      }\n    };\n  },\n  props: {\n    handleSubmit: Function,\n    placeholder: Object\n  },\n  created: function() {\n    if (this.placeholder) {\n      //console.log(\"placeholder found\")\n      this.formData = { ...this.formData, ...this.placeholder };\n      // sever connection between this.formData.images and this.placeholder.images?\n      // (prevents the 404 when the not-yet-submitted image can't be loaded by the server)\n      if (this.formData.images === null) {\n        this.formData.images = [];\n      } else {\n        this.formData.images = [...this.placeholder.images];\n      }\n    }\n  },\n  beforeUpdate: function() {},\n  // we're fetching pathnames (strings)\n  filters: {\n    getName(image) {\n      //console.log(image);\n      if (image.name) {\n        return image.name;\n      } else {\n        return image;\n      }\n    }\n  },\n  computed: {\n    numWholeStars() {\n      if (this.hoverOverStarIndex) {\n        return this.hoverOverStarIndex;\n      }\n      if (this.formData.rating) {\n        return this.formData.rating;\n      }\n      if (this.placeholder) {\n        return this.placeholder.rating;\n      } else {\n        return 0;\n      }\n    },\n    numEmptyStars() {\n      if (!this.formData.rating) {\n        return 5;\n      }\n      return 5 - this.numWholeStars;\n    },\n    numFiles() {\n      return this.formData.images.length;\n    },\n    fileInputMessage() {\n      if (this.numFiles === 1) {\n        return this.numFiles + \" file selected...\";\n      }\n      return this.numFiles + \" files selected...\";\n    },\n    titlePlaceholder() {\n      if (this.placeholder) {\n        return this.placeholder.title || \"Review Title...\";\n      }\n      return \"Review Title...\";\n    },\n    descriptionPlaceholder() {\n      if (this.placeholder) {\n        return this.placeholder.description;\n      }\n      return \"\";\n    }\n  },\n  methods: {\n    getIconType(n) {\n      if (n <= this.numWholeStars) {\n        return \"star\";\n      } else {\n        return [\"far\", \"star\"];\n      }\n    },\n    handleDeleteFile(index) {\n      this.formData.images.splice(index, 1);\n    },\n    addFiles(e) {\n      for (var i = 0; i < e.target.files.length; i++) {\n        this.formData.images.push(e.target.files[i]);\n      }\n    }\n  }\n};\n</script>\n\n<style>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReviewForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReviewForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReviewForm.vue?vue&type=template&id=2c74f15a&\"\nimport script from \"./ReviewForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ReviewForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}